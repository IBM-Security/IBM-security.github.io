<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Update the attachments for a resource</doc>
<resources base="">
<resource path="https://{appliance_hostname}/iam/access/v8/policyattachments/{policy_attachment_id}/policies">
<param type="path" name="appliance_hostname">
<doc>Host name of the appliance.</doc>
</param>
<param type="path" name="policy_attachment_id">
<doc>The system-assigned policy attachment ID value.</doc>
</param>
<param type="query" name="action">
<doc>Indicates the type of change to the policy attachment.  Valid values are 'add', 'remove', 'force_remove', or 'set'. Specify an array of attachments (policies, policy sets, and definitions) to be added, removed, or set as the new list of attachments for this resource. 'set' replaces what is currently assigned to the resource with the new list.</doc>
</param>
<method name="PUT" id="Update the attachments for a resource"><doc>   To update the policy attachments for a resource, issue an HTTP PUT command on the  				     policy attachments policies resource URI. Specify the action query parameter to  					 indicate the type of change to the policy attachment. </doc>
<request>
<doc>
 Add policy set with ID 2 to the policy attachment with ID 4:

 https://{appliance_hostname}/iam/access/v8/policyattachments/4/policies
 ?action=add

 PUT_DATA: [
 {
 "id":"2",
 "type":"policyset"
 }
 ]

 Add policies with ID 5 and 12 to the policy attachment with ID 4:

 https://{appliance_hostname}/iam/access/v8/policyattachments/4/policies
 ?action=add

 PUT_DATA: [
 {
 "id":"5",
 "type":"policy"
 },
 {
 "id":"12",
 "type":"policy"
 }
 ]


 Remove policy with ID 5 from the policy attachment with ID 4:

 https://{appliance_hostname}/iam/access/v8/policyattachments/4/policies
 ?action=remove

 PUT_DATA: [
 {
 "id":"5",
 "type":"policy"
 }
 ]

 For policy attachment with ID 2, set policy with ID 1 and policy set
 with ID 3 as its attachments:

 https://{appliance_hostname}/iam/access/v8/policyattachments/2/policies
 ?action=set

 PUT_DATA: [
 {
 "id":"1",
 "type":"policy"
 },
 {
 "id":"3",
 "type":"policyset"
 }
 ]

 Note:  To determine the policy ID values to use, issue an HTTP GET command
        on the policies resource URI:
        https://{appliance_hostname}/iam/access/v8/policies/.
        To determine the policy set ID values to use, issue an HTTP GET
        command on the policy sets URI:
        https://{appliance_hostname}/iam/access/v8/policysets/.

 </doc><doc>
 To determine the policy_attachment_id value of the policy attachment to be updated, issue an HTTP GET command on the
 policy attachments resource URI:  https://{appliance_hostname}/iam/access/v8/policyattachments/.
 </doc><param name="Authorization: Basic" style="header">
<doc>Basic authentication header. </doc></param>
<param name="Accept:application/json" style="header">
<doc>Required for requests to the service. </doc></param>
<representation name="policyChanges" mediatype="application/json">
<param style="plain" name="attachments" type="attachment" optional="No"  repeating="true">
<doc>Array of attachment objects to be added, removed, or set for access to the resource. </doc>
</param>
</representation><representation name="attachment" mediatype="application/json">
<param style="plain" name="id" type="String" optional="No" >
<doc>Internally assigned ID value of the policy, policy set, or API protection definition to be attached to the resource.</doc>
</param>
<param style="plain" name="type" type="String" optional="No" >
<doc>The type of attachment.  Values include 'policy', 'policyset', or 'definition'. </doc>
</param>
</representation></request>
<response status="204">
<doc>No content returned.  The request was successful.</doc>
<doc>204 NO CONTENT</doc></response><response status="400">
<doc>Bad Request. There is a problem with the request. The JSON result describes the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="404">
<doc>Not Found. The requested service does not exist. The JSON message indicates which resource.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="409">
<doc>Conflict. The JSON result indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="500">
<doc>An internal error occurred. The JSON message indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response></method>
</resource>
</resources>
</application>
