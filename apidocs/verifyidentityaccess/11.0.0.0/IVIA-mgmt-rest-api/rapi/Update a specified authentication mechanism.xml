<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Update a specified authentication mechanism</doc>
<resources base="">
<resource path="https://{appliance_hostname}/iam/access/v8/authentication/mechanisms/{auth_mechanism_id}">
<param type="path" name="appliance_hostname">
<doc>Host name of the appliance.</doc>
</param>
<param type="path" name="auth_mechanism_id">
<doc>The system-assigned authentication mechanism ID value.</doc>
</param>
<method name="PUT" id="Update a specified authentication mechanism"><doc>  To update the settings of an existing authentication mechanism, issue an HTTP PUT command on the                    authentication mechanisms resource URI specifying the ID of the authentication mechanism to be updated.  </doc>
<request>
<doc>
   Update the max server connections property of the Username and Password authentication mechanism, ID 7:
 
 1) Get the payload of the Username and Password authentication mechanism, whose ID is 7,
 by issuing a GET command on the authentication mechanisms resource URI:
 
 GET https://{appliance_hostname}/iam/access/v8/authentication/mechanisms/7
 
 Response:
 200 OK
 {
   "id":"7",
   "description":"Username password authentication",
   "name":"Username Password",
   "attributes":
     [
       {
         "selector":"mail",
         "name":"emailAddress",
         "namespace":"urn:ibm:security:authentication:asf:mechanism:password"
       },
       {"selector":"mobile",
         "name":"mobileNumber",
         "namespace":"urn:ibm:security:authentication:asf:mechanism:password"
       }
     ],
   "properties":
     [
       {
         "value":"(|(objectclass=ePerson)(objectclass=Person))",
         "key":"usernamePasswordAuthentication.userSearchFilter"
       },
       {
         "value":"false",
         "key":"usernamePasswordAuthentication.useFederatedDirectoriesConfig"
       },
       {
         "value":"false",
         "key":"usernamePasswordAuthentication.loginFailuresPersistent"
       },
       {  
         "value":"*******",
         "key":"usernamePasswordAuthentication.ldapBindPwd"
       },
       {
         "value":"","key":
         "usernamePasswordAuthentication.sslTrustStore"
       },
       {
         "value":"16",
         "key":"usernamePasswordAuthentication.maxServerConnections"
       },
       {
         "value":"389",
         "key":"usernamePasswordAuthentication.ldapPort"
       },
       {
         "value":"",
         "key":"usernamePasswordAuthentication.ldapHostName"
       },
       {
         "value":"Default",
         "key":"usernamePasswordAuthentication.mgmtDomain"
       },
       {
         "value":"",
         "key":"usernamePasswordAuthentication.ldapBindDN"
       },
       {
         "value":"false",
         "key":"usernamePasswordAuthentication.sslEnabled"
       }
     ],
   "predefined":true,
   "uri":"urn:ibm:security:authentication:asf:mechanism:password",
   "typeId":"7"
 }
 
 2) Copy the response and use it as the PUT_DATA in the PUT command. Make the 
 necessary modification to the 'usernamePasswordAuthentication.maxServerConnections' property.  
     
 Fields submitted in the payload that are not required by the PUT action will be ignored during
 processing.  
     
 In the example below, "name" and "uri" are required and since the only property 
 we are changing is "urn:ibm:security:authentication:asf:mechanism:password", that is the only 
 property we are providing.
 
 PUT https://{other_appliance_hostname}/iam/access/v8/authentication/mechanisms
 
 PUT_DATA: {
   "name":"Username Password",
   "uri":"urn:ibm:security:authentication:asf:mechanism:password",
   "properties":[{"value":"17","key":"usernamePasswordAuthentication.maxServerConnections"}]
 }
 
 </doc><doc>
                  To determine the auth_mechanism_id value of the authentication mechanism to be updated, issue an HTTP GET command on the 
                  resource URI of the authentication mechanism: https://{appliance_hostname}/iam/access/v8/authentication/mechanisms. 
 </doc><doc> 
                  Only attributes and properties can be updated for an authentication mechanism whose predefined value is true.
 </doc><param name="Authorization: Basic" style="header">
<doc>Basic authentication header. </doc></param>
<param name="Accept:application/json" style="header">
<doc>Required for requests to the service. </doc></param>
<representation name="authMechJsonRequest" mediatype="application/json">
<param style="plain" name="id" type="String" optional="Yes" >
<doc>Internally assigned ID value of the authentication mechanism.</doc>
</param>
<param style="plain" name="description" type="String" optional="Yes" >
<doc>A description of the authentication mechanism.</doc>
</param>
<param style="plain" name="name" type="String" optional="No" >
<doc>A unique name for the authentication mechanism.</doc>
</param>
<param style="plain" name="attributes" type="authMechAttrJsonResponse" optional="No"  repeating="true">
<doc>Attributes specific to this authentication mechanism that correspond with the attributes of the authentication mechanism type that it is an implementation of.  See typeId for more information.</doc>
</param>
<param style="plain" name="properties" type="authMechPropJsonResponse" optional="No"  repeating="true">
<doc>Properties specific to this authentication mechanism that correspond to the properties of the authentication mechanism type that it is an implementation of. See typeId for more information.</doc>
</param>
<param style="plain" name="predefined" type="Boolean" optional="Yes" >
<doc>Set to True if the authentication mechanism is predefined and ships with the product. Set to False if the authentication mechanism is custom defined.</doc>
</param>
<param style="plain" name="uri" type="String" optional="No" >
<doc>The unique identifier of the authentication mechanism.</doc>
</param>
<param style="plain" name="typeId" type="String" optional="Yes" >
<doc>ID of the authentication mechanism type that this authentication mechanism is an implementation of. </doc>
</param>
</representation><representation name="authMechAttrJsonResponse" mediatype="application/json">
<param style="plain" name="selector" type="String" optional="No" >
<doc>Name of a registry attribute to obtain.</doc>
</param>
<param style="plain" name="name" type="String" optional="No" >
<doc>Authentication service context attribute.</doc>
</param>
<param style="plain" name="namespace" type="String" optional="No" >
<doc>Authentication service namespace of "name". </doc>
</param>
</representation><representation name="authMechPropJsonResponse" mediatype="application/json">
<param style="plain" name="key" type="String" optional="No" >
<doc>Unique key name for this property.</doc>
</param>
<param style="plain" name="value" type="String" optional="No" >
<doc>Value for this property. </doc>
</param>
</representation></request>
<response status="204">
<doc>No content returned.  The request was successful.</doc>
<doc>204 NO CONTENT</doc></response><response status="400">
<doc>Bad Request. There is a problem with the request. The JSON result describes the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="404">
<doc>Not Found. The requested service does not exist. The JSON message indicates which resource.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="409">
<doc>Conflict. The JSON result indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="500">
<doc>An internal error occurred. The JSON message indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response></method>
</resource>
</resources>
</application>
