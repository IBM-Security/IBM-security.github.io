<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Retrieve a list of authentication mechanisms types</doc>
<resources base="">
<resource path="https://{appliance_hostname}/iam/access/v8/authentication/mechanism/types">
<param type="path" name="appliance_hostname">
<doc>Host name of the appliance.</doc>
</param>
<param type="query" name="start">
<doc>(Optional) The record index from which to start returns. If specified, also define the count query parameter. Default is 0.</doc>
</param>
<param type="query" name="count">
<doc>(Optional) The number of records to return.</doc>
</param>
<param type="query" name="filter">
<doc>(Optional) One or more filter-statements, where filter-statement consists of &lt;name&gt;, &lt;operator&gt;, or &lt;expression&gt;. The &lt;name&gt; is the field name to apply the filter to. The &lt;operator&gt; is one of the following comparator operators&#58; equals, gt, ge, lt, le, notequal, startswith, endswith, contains, or containsignorecase. The &lt;expression&gt; indicates the value to be included in the results. Multiple filter-statements can be combined with ' and '. The filter must be URL-safe encoded. For example&#58; filter=fieldA%20contains%20scr%20and%20fieldB%20gt%205.</doc>
</param>
<param type="query" name="sortBy">
<doc>(Optional) The response field name that the returned data is sorted by. Precede the field name with a plus sign (+) for ascending order and a minus sign (-) for descending order.  Separate multiple field names by a comma. For example&#58; sortBy=+fieldA or sortBy=-fieldB</doc>
</param>
<method name="GET" id="Retrieve a list of authentication mechanism types"><doc>   To retrieve information about existing authentication mechanism types, issue an HTTP GET command on the                     authentication mechanism types resource URI. Qualify the list returned by specifying one or more of the following                     query parameters: start, count, filter or sortBy. </doc>
<request>
<doc>
 Retrieve a list of existing authentication mechanisms that are sorted in ascending order by name:
 
 GET https://{appliance_hostname}/iam/access/v8/authentication/mechanism/types?sortBy=+name
 
 Retrieve a list of authentication mechanisms that begin with the letter 'U' (case sensitive):
 
 GET https://{appliance_hostname}/iam/access/v8/authentication/mechanism/types?filter=name%20startswith%20U
 
 Retrieve all authentication mechanism types which reference "one-time password" information:
 
 GET https://{appliance_hostname}/iam/access/v8/authentication/mechanism/types?filter=description%20contains%20one-time%20password
 </doc><param name="Authorization: Basic" style="header">
<doc>Basic authentication header. </doc></param>
<param name="Accept:application/json" style="header">
<doc>Required for requests to the service. </doc></param>
</request>
<response status="200">
<doc>OK. The request was successful.</doc>
<doc>
 200 OK
 [
   {
     "enabled":true,
     "implementationVersion":"8.0.0.3",
     "properties":
       [
         {
           "validValues":
             [
               "6",
               "7",
               "8",
               "9"
             ],
           "datatype":"Integer",
           "required":false,
           "key":"otp.hotp.length",
           "sensitive":false
         },
         {
           "validValues":
             [
               "HmacSHA1",
               "HmacSHA256",
               "HmacSHA512"
             ],
           "datatype":"String",
           "required":false,
           "key":"otp.hotp.macAlgorithm",
           "sensitive":false
         },
         {
           "validValues":
             [],
           "datatype":"Integer",
           "required":false,
           "key":"otp.hotp.maxLookahead",
           "sensitive":false
         },
         {
           "validValues":
             [],
           "datatype":"String",
           "required":false,
           "key":"otp.hotp.secretKeyAttributeName",
           "sensitive":false
         },
         {
           "validValues":
             [],
           "datatype":"URI",
           "required":false,
           "key":"otp.hotp.secretKeyAttributeNamespace",
           "sensitive":false
         },
         {
           "validValues":
             [],
           "datatype":"String",
           "required":false,
           "key":"otp.hotp.secretKeyUrl",
           "sensitive":false
         }
       ],
     "supportsSelector":false,
     "type":"HOTP One-time Password",
     "allowMultipleInstances":false,
     "id":"0",
     "implementationId":"HOTPAuthenticator",
     "description":"Counter-based one-time password authentication",
     "name":"HOTP One-time Password",
     "parameters":
       [
         {
           "validValues":
             [],
           "name":"reauthenticate",
           "datatype":"Boolean",
           "required":true,
           "defaultValue":"true"
         },
         {
           "validValues":
             [],
           "name":"secretKey",
           "datatype":"String",
           "required":false,
           "defaultValue":""
         },
         {
           "validValues":
             [],
           "name":"username",
           "datatype":"String",
           "required":false,
           "defaultValue":""
         }
       ],
     "implementationType":"Authenticator",
     "predefined":true
   },
   {
     "enabled":true,
     "implementationVersion":"8.0.0.3",
     "properties":
       [
         {
           "validValues":
             [],
           "datatype":"String",
           "required":false,
           "key":"otp.macotp.characters",
           "sensitive":false
         },
         {
           "validValues":
             [
               "SHA-1",
               "SHA-256",
               "SHA-512"
             ],
           "datatype":"String",
           "required":false,
           "key":"otp.macotp.hashAlgorithm",
           "sensitive":false
         },
         {
           "validValues":
             [
               "6",
               "7",
               "8",
               "9"
             ],
           "datatype":"Integer",
           "required":false,
           "key":"otp.macotp.length",
           "sensitive":false
         },
         {
           "validValues":
             [],
           "datatype":"Integer",
           "required":false,
           "key":"otp.macotp.lifetime",
           "sensitive":false
         }
       ],
     "supportsSelector":false,
     "type":"MAC One-time Password",
     "allowMultipleInstances":false,
     "id":"1",
     "implementationId":"MACOTPAuthenticator",
     "description":"MAC one-time password authentication",
     "name":"MAC One-time Password",
     "parameters":
       [
         {
           "validValues":
             [
               "Email",
               "SMS"
             ],
          "name":"deliveryType",
          "datatype":"String",
          "required":false,
          "defaultValue":""
        },
        {
          "validValues":
            [],
          "name":"emailAddress",
          "datatype":"Email",
          "required":false,
          "defaultValue":""
        },
        {
          "validValues":
            [],
          "name":"mobileNumber",
          "datatype":"String",
          "required":false,
          "defaultValue":""
        },
        {
          "validValues":
            [],
          "name":"reauthenticate",
          "datatype":"Boolean",
          "required":true,
          "defaultValue":"true"
        },
        {
          "validValues":
            [],
          "name":"username",
          "datatype":"String",
          "required":false,
          "defaultValue":""
        }
      ],
    "implementationType":"Authenticator",
    "predefined":true
  },
 ....
 ]
 
 </doc><param name="Content-Range:items n-nn/nnn" style="header">
<doc>Indicates which records out of the total number of records were returned in a format similar to the following example&#58; items 0-49/100. </doc></param>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="authMechTypeJsonResponse" mediatype="application/json">
<doc>Note: Response body is an array.</doc><param style="plain" name="enabled" type="String" optional="No" >
<doc>Indicates whether or not this type of authentication mechanism is enabled.</doc>
</param>
<param style="plain" name="implementationVersion" type="String" optional="No" >
<doc>Version of this type of authentication mechanism.</doc>
</param>
<param style="plain" name="properties" type="authMechTypePropJsonResponse" optional="No"  repeating="true">
<doc>Array of properties that are specific to this type of authentication mechanism.</doc>
</param>
<param style="plain" name="supportsSelector" type="Boolean" optional="No" >
<doc>Indicates if this type of authentication mechanism supports querying for values from a registry.</doc>
</param>
<param style="plain" name="type" type="String" optional="No" >
<doc>Authentication mechanism type.</doc>
</param>
<param style="plain" name="allowMultipleInstances" type="Boolean" optional="No" >
<doc>Indicates whether or not multiple instances of this type of authentication mechanism are permitted.</doc>
</param>
<param style="plain" name="id" type="String" optional="No" >
<doc>Internally assigned ID value of the authentication mechanism type.</doc>
</param>
<param style="plain" name="implementationId" type="String" optional="No" >
<doc>Class name or osgi extension id of the implementation.</doc>
</param>
<param style="plain" name="description" type="String" optional="No" >
<doc>Description of this type of authentication mechanism.</doc>
</param>
<param style="plain" name="name" type="String" optional="No" >
<doc>Name of this type of authentication mechanism.</doc>
</param>
<param style="plain" name="parameters" type="authMechTypeParamJsonResponse" optional="No"  repeating="true">
<doc>Array of parameters specific to this type of authentication mechanism.</doc>
</param>
<param style="plain" name="implementationType" type="String" optional="No" >
<doc>Always specify "Authenticator" for this version of the product.</doc>
</param>
<param style="plain" name="predefined" type="Boolean" optional="No" >
<doc>Set to True if the authentication mechanism type is predefined and ships with the product. Set to False if the authentication mechanism type is custom defined. </doc>
</param>
</representation><representation name="authMechTypePropJsonResponse" mediatype="application/json">
<param style="plain" name="validValues" type="String" optional="No"  repeating="true">
<doc>Where the defined set of valid values resides if this property has a defined set of valid values.</doc>
</param>
<param style="plain" name="datatype" type="String" optional="No" >
<doc>One of the following values: Binary, Boolean, Double, Integer, String, JavaScript, KeyStore, Email, X500, URI, URL, Hostname.</doc>
</param>
<param style="plain" name="required" type="Boolean" optional="No" >
<doc>Indicates whether or not this property is required.</doc>
</param>
<param style="plain" name="key" type="String" optional="No" >
<doc>Unique key identifying this property.</doc>
</param>
<param style="plain" name="sensitive" type="Boolean" optional="No" >
<doc>Indicates whether or not the value for this property is sensitive. For example: a password </doc>
</param>
</representation><representation name="authMechTypeParamJsonResponse" mediatype="application/json">
<param style="plain" name="validValues" type="String" optional="No"  repeating="true">
<doc>Where the defined set of valid values resides if this parameter has a defined set of valid values. Note: This is an array of elements.</doc>
</param>
<param style="plain" name="name" type="String" optional="No" >
<doc>Unique name of this parameter</doc>
</param>
<param style="plain" name="datatype" type="String" optional="No" >
<doc>Data type of this parameter.  Valid values include: 'String', 'Double', 'Integer' and 'Boolean'.</doc>
</param>
<param style="plain" name="required" type="Boolean" optional="No" >
<doc>Indicates if this is a required parameter.</doc>
</param>
<param style="plain" name="defaultValue" type="String" optional="No" >
<doc>Non-empty string if this parameter has a default value. </doc>
</param>
</representation></response><response status="400">
<doc>Bad Request. There is a problem with the request. The JSON result describes the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="404">
<doc>Not Found. The requested service does not exist. The JSON message indicates which resource.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="500">
<doc>An internal error occurred. The JSON message indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response></method>
</resource>
</resources>
</application>
