<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Update Container Deployment</doc>
<resources base="">
<resource path="https://{appliance_hostname}/isam/container_ext/container/{container_id}">
<param type="path" name="appliance_hostname">
<doc>Host name of the appliance.</doc>
</param>
<param type="path" name="container_id">
<doc>The id of the container deployment.</doc>
</param>
<method name="PUT" id="Update the container deployment state."><doc>          Update the pod state of a managed container deployment. </doc>
<doc> Warning: This API does not function without installing the Verify Identity Access Container Extension                  from the IBM Security App Exchange. </doc>
<request>
<doc>
  PUT https://{appliance_hostname}/isam/container_ext/container/{container_id}
  PUT_DATA: {
          "operation": "start"
      }
 </doc><param name="Authorization" style="header">
<doc>Basic Authentication header </doc></param>
<param name="Accept:application/json" style="header">
<doc>Required for requests to the service </doc></param>
<representation name="containerUpdateJsonRequest" mediatype="application/json">
<param style="plain" name="operation" type="String" optional="Yes" >
<doc>Should the container be stopped ("stop") or started ("start") or restarted ("restart"). Either "command" or "operation" property must be provided.</doc>
</param>
<param style="plain" name="command" type="String" optional="Yes" >
<doc>The name of the command from the metadata document to run. Either "command" or "operation" property must be provided.</doc>
</param>
<param style="plain" name="args" type="String" optional="Yes"  repeating="true">
<doc>An optional list of arguments to run the specified command with. </doc>
</param>
</representation></request>
<response status="204">
<doc>The request was successful.</doc>
<doc>
      204 NO CONTENT
 </doc><param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
</response><response status="200">
<doc>OK, The request was successful.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
<representation name="containerUpdateJsonResponse" mediatype="application/json">
<param style="plain" name="rc" type="Integer" optional="No" >
<doc>Exit status of command.</doc>
</param>
<param style="plain" name="output" type="String" optional="No" >
<doc>Output read from stdout. </doc>
</param>
</representation></response><response status="400">
<doc>There is a problem with the request. The JSON message describes the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="message" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="404">
<doc>File not Found, The requested service does not exist. The JSON message indicates which resource.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="message" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="500">
<doc>An internal error occurred. The JSON message indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="message" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response></method>
</resource>
</resources>
</application>
