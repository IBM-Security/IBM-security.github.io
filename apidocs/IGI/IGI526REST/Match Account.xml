<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Match Account</doc>
<resources base="">
<resource path="https://{host}:{port}/igi/v2/agc/users/accounts/{account_id}/match">
<param type="path" name="account_id">
<doc>Specifies the ID of the unmatched account</doc>
</param>
<param type="query" name="codeOperation">
<doc>transaction key that identifies the operation and who performed it (optional parameter). In case it is not set the system automatically creates one like rest_&lt;random_number&gt;.</doc>
</param>
<param type="query" name="userId">
<doc>Specifies the user to match the account</doc>
</param>
<method name="GET" id="AGC Match Account"><doc> Match an unmatched account with the user provided as parameter </doc>
<request>
<doc>
 Example : Match an account 13576 with user 122  
 GET https://www.example.com:9343/igi/v2/agc/users/accounts/13576/match?userId=122
 </doc><param name="Content-Type" style="header">
<doc>application/scim+json </doc></param>
<param name="Authorization" style="header">
<doc>Bearer Authorization </doc></param>
<param name="realm" style="header">
<doc>Realm </doc></param>
</request>
<response status="200">
<doc>Success.</doc>
</response><response status="204">
<doc>No content.</doc>
<doc>
 In case of success no content is provided.</doc></response><response status="400">
<doc>Bad request.</doc>
<doc>400 BAD REQUEST
 Note: in case the account is already matched 
  
</doc><representation name="ScimError" mediatype="application/json">
<param style="plain" name="urn" type="String" optional="No" >
<doc>urn:ietf:params:scim:api:messages:2.0:Error </doc>
</param>
</representation></response><response status="500">
<doc>Internal server error.</doc>
<doc>{
     	"schemas": ["urn:ietf:params:scim:api:messages:2.0:Error"],
     	"status": 400,
     	"scimType": "invalidValue",
     	"detail": "Account already matched"
     	}</doc><representation name="ScimError" mediatype="application/json">
<param style="plain" name="urn" type="String" optional="No" >
<doc>urn:ietf:params:scim:api:messages:2.0:Error </doc>
</param>
</representation></response><response status="200">
<doc>Success.</doc>
</response><response status="204">
<doc>No content.</doc>
<doc>
 In case of success no content is provided.</doc></response><response status="400">
<doc>Bad request.</doc>
<doc>400 BAD REQUEST
 Note: in case the account is already matched 
  
</doc><representation name="ScimError" mediatype="application/json">
<param style="plain" name="urn" type="String" optional="No" >
<doc>urn:ietf:params:scim:api:messages:2.0:Error </doc>
</param>
</representation></response><response status="500">
<doc>Internal server error.</doc>
<doc>{
     	"schemas": ["urn:ietf:params:scim:api:messages:2.0:Error"],
     	"status": 400,
     	"scimType": "invalidValue",
     	"detail": "Account already matched"
     	}</doc><representation name="ScimError" mediatype="application/json">
<param style="plain" name="urn" type="String" optional="No" >
<doc>urn:ietf:params:scim:api:messages:2.0:Error </doc>
</param>
</representation></response></method>
</resource>
</resources>
</application>
