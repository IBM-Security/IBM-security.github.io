<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Validate Password</doc>
<resources base="">
<resource path="https://{host}:{port}/igi/v2/agc/users/accounts/PasswordValidateRequests">
<param type="query" name="codeOperation">
<doc>transaction key that identifies the operation and who performed it (optional parameter). In case it is not set the system automatically creates one like rest_&lt;random_number&gt;.</doc>
</param>
<method name="POST" id="AGC Validate User Account Password API"><doc> Validate if the password specified is compliant with the password policies of a specific account (see Get Password Policy) </doc>
<request>
<doc>
 POST https://www.example.com:9343/igi/v2/agc/users/accounts/PasswordValidateRequests
 POST_DATA:
	{
		"schemas" : ["urn:ietf:params:scim:schemas:core:2.0:password:api:PasswordValidateRequest"],
		"$ref":"/Users/accounts/101",
		"password":"11111111"
	}
	
 </doc><param name="Accept-Language" style="header">
<doc>languange tag </doc></param>
<param name="Content-Type" style="header">
<doc>application/scim+json </doc></param>
<param name="Authorization" style="header">
<doc>Bearer Authorization </doc></param>
<param name="realm" style="header">
<doc>realm </doc></param>
<representation name="ScimPwd" mediatype="application/json">
<param style="plain" name="urn" type="String" optional="No" >
<doc>urn:ibm:params:scim:api:messages:2.0:ChangePwd </doc>
</param>
</representation></request>
<response status="200">
<doc>Success.</doc>
<param name="Content-Type" style="header">
<doc>application/scim+json </doc></param>
</response><response status="204">
<doc>No content.</doc>
<param name="Content-Type" style="header">
<doc>application/scim+json </doc></param>
<doc>
 In case of success no content is provided.	</doc></response><response status="400">
<doc>Bad request.</doc>
<doc>400 Bad Request
 *Note: in the example the password policy requires minimum number of lower case characters and specific password length range.
 and the password provided is not complain to this two policy.
  
 
 [
    	{
        	"schemas": [
            	"urn:ietf:params:scim:api:messages:2.0:Error"
        	],
        	"status": 400,
        	"scimType": "PWD_MIN_LOWER_CHAR_REQUIRED", "PWD_EXCEED_MAX_LENGTH",
        	"detail": "Minimum number of lower case characters required. Password maximum length exceeded."
    	},
		]
		</doc><param name="Content-Type" style="header">
<doc>application/scim+json </doc></param>
<representation name="ScimError" mediatype="application/json">
<param style="plain" name="urn" type="String" optional="No" >
<doc>urn:ietf:params:scim:api:messages:2.0:Error </doc>
</param>
</representation></response><response status="500">
<doc>Internal server error.</doc>
<param name="Content-Type" style="header">
<doc>application/scim+json </doc></param>
<representation name="ScimError" mediatype="application/json">
<param style="plain" name="urn" type="String" optional="No" >
<doc>urn:ietf:params:scim:api:messages:2.0:Error </doc>
</param>
</representation></response></method>
</resource>
</resources>
</application>
