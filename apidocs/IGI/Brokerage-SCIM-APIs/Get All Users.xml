<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Get All Users</doc>
<resources base="">
<resource path="https://{host}:{port}/BrokerageService/identity/Targets/{target_id}[/v2]/Users[?filter=userName eq 'joe'|?filter=userName sw 'j']">
<param type="query" name="filter">
<doc>A filter used to limit the number of items returned.</doc>
</param>
<method name="GET" id="get all users"><doc> Retrieve all users from a target.  Data are from the target cache in Identity Brokerage as a result of reconciliation request.  The  maximum number of accounts that can be returned is limited to 1000. The returned results can be  partitioned by using the "userName" attribute in the "filter" query parameter (see more information  below). </doc>
<request>
<doc>

 GET https://www.example.com:8443/BrokerageService/identity/Targets/2633394108361159400/Users
 </doc><doc>
 The request filter must adhere to the SCIM v2.0 filter specifications in section 3.4.2.2 of RFC 7644
 (https://tools.ietf.org/html/rfc7644#section-3.4.2).
 In this release, only the "userName" attribute and the "eq" (equals) and "sw" (startswith) operators are supported.
 All searches are case-insensitive.
 Example 1: filter=userName eq 'joe'
 Example 2: filter=userName sw 'j'
 </doc><param name="Accept:application/scim+json" style="header">
<doc>Required for requests to the target</doc></param>
<param name="Authorization" style="header">
<doc>Basic Authentication header </doc></param>
</request>
<response status="200">
<doc>OK, The request was successful</doc>
<doc>

 HTTPS/1.1 200 OK

 Content-Type: application/scim+json Location:

{
	"schemas": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
	"totalResults": 42,
	"Resources": [{
		"schemas": ["urn:ietf:params:scim:schemas:core:2.0:User",
		"urn:ibm:idbrokerage:params:scim:schemas:extension:PosixLinuxAccount:2.0:User"],
		"id": "8943240579467331358",
		"userName": "bin",
		"active": true,
		"urn:ibm:idbrokerage:params:scim:schemas:extension:PosixLinuxAccount:2.0:User": {
			"erPosixUid": "2",
			"erPosixPrimaryGroup": "bin",
			"erPosixMinPwdAge": 0,
			"erPosixPerHomeDir": "'111111101'B",
			"eraccountstatus": 0,
			"erPosixMaxPwdAge": 99999,
			"erPosixCron": false,
			"erPosixForcePwdChange": false,
			"erPosixHomeDir": "/bin",
			"erPosixLoginRetries": 0,
			"erPosixShell": "/usr/sbin/nologin",
			"erPosixGecos": "bin",
			"erPosixAT": false,
			"eruid": "bin",
			"erPosixUMask": "'000010010'B",
			"erPosixPwdLastChange": "2016-02-11T12:00:00Z",
			"erPosixPwdWarnAge": 7
		},
		"meta": {
			"created": "2016-06-23T15:15:00Z",
			"location": "https://www.example.com:8443/BrokerageService/identity/Targets/2633394108361159400/Users/8943240579467331358",
			"resourceType": "User",
			"lastModified": "2016-06-23T15:15:00Z"
		}
	},
	...
	{
		"schemas": ["urn:ietf:params:scim:schemas:core:2.0:User",
		"urn:ibm:idbrokerage:params:scim:schemas:extension:PosixLinuxAccount:2.0:User"],
		"id": "8943260859511618396",
		"userName": "test5",
		"active": true,
		"urn:ibm:idbrokerage:params:scim:schemas:extension:PosixLinuxAccount:2.0:User": {
			"erPosixUid": "1003",
			"erPosixPrimaryGroup": "test5",
			"erPosixMinPwdAge": 0,
			"eraccountstatus": 0,
			"erPosixMaxPwdAge": 99999,
			"erPosixCron": false,
			"erPosixForcePwdChange": false,
			"erPosixHomeDir": "/home/test5",
			"erPosixLoginRetries": 0,
			"erPosixShell": "/bin/sh",
			"erPosixAT": true,
			"eruid": "test5",
			"erPosixUMask": "'000010010'B",
			"erPosixPwdLastChange": "2016-06-23T12:00:00Z",
			"erPosixPwdWarnAge": 7
		},
		"meta": {
			"created": "2016-06-23T15:15:00Z",
			"location": "https://www.example.com:8443/BrokerageService/identity/Targets/2633394108361159400/Users/8943260859511618396",
			"resourceType": "User",
			"lastModified": "2016-06-23T15:15:00Z"
		}
	}]
}

 </doc></response><response status="401">
<doc>UnAuthorized</doc>
</response><response status="403">
<doc>Forbidden</doc>
</response><response status="500">
<doc>An internal error occurred</doc>
</response><response status="404">
<doc>Not Found, The requested target does not exist</doc>
<doc>

 {

 "schemas": ["urn:ietf:params:scim:api:messages:2.0:Error"],

 "detail":"Specified target 2633394108361159400 is not found",

 "status": "404"

 }

 </doc></response><response status="400">
<doc>Bad Request, Too many items to return</doc>
<doc>

 {

 "schemas": ["urn:ietf:params:scim:api:messages:2.0:Error"],

 "detail":"The specified search returns more results (1234) than the server can process (1000). Use a filter or refine the filter to reduce the matched results.",

 {

 "schemas": ["urn:ietf:params:scim:api:messages:2.0:Error"],

 "detail": "The specified filter syntax is not valid, or the specified attribute and comparison operation is not supported.",

 "status": "400"

 }

 </doc></response><response status="400">
<doc>Bad Request, The search filter is not valid</doc>
<doc>

 {

 "schemas": ["urn:ietf:params:scim:api:messages:2.0:Error"],

 "detail":"The specified search returns more results (1234) than the server can process (1000). Use a filter or refine the filter to reduce the matched results.",

 {

 "schemas": ["urn:ietf:params:scim:api:messages:2.0:Error"],

 "detail": "The specified filter syntax is not valid, or the specified attribute and comparison operation is not supported.",

 "status": "400"

 }

 </doc></response></method>
</resource>
</resources>
</application>
