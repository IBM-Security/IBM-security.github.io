<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Add User</doc>
<resources base="">
<resource path="https://{host}:{port}/BrokerageService/identity/Targets/{target_id}[/v2]/Users">
<method name="POST" id="add user"><doc> Add a user to the target.  This will create a user to the target endpoint, and if succeeded, add the user to the cache. </doc>
<request>
<doc>

 POST https://www.example.com:8443/BrokerageService/identity/Targets/2633394108361159400/Users

{
	"schemas": ["urn:ibm:idbrokerage:params:scim:schemas:extension:PosixLinuxAccount:2.0:User"],
	"urn:ibm:idbrokerage:params:scim:schemas:extension:PosixLinuxAccount:2.0:User": {
	    "erpassword": "P@ssword",
	    "erPosixMinPwdAge": 0,
	    "eraccountstatus": 0,
	    "erPosixMaxPwdAge": 99999,
	    "erPosixCron": "false",
	    "erPosixForcePwdChange": false,
	    "erPosixLoginRetries": 0,
	    "erPosixShell": "/usr/sbin/nologin",
	    "erPosixGecos": "testuser23",
	    "erPosixAT": false,
	    "eruid": "testuser23",
	    "erPosixUMask": "'000010010'B",
	    "erPosixExpireDate": "2016-07-15T17:14:00Z",
	    "erPosixPwdWarnAge": 7
	}
}

 </doc><doc> The core SCIM schema attributes are read only, users are added using Identity Brokerage's custom extended attributes.
</doc><param name="Accept:application/scim+json" style="header">
<doc>Required for requests to the target</doc></param>
<param name="Authorization" style="header">
<doc>Basic Authentication header </doc></param>
</request>
<response status="201">
<doc>Created, The account was created successfully</doc>
<doc>

{
	"schemas": ["urn:ietf:params:scim:schemas:core:2.0:User",
	"urn:ibm:idbrokerage:params:scim:schemas:extension:PosixLinuxAccount:2.0:User"],
	"id": "6468932493076800148",
	"userName": "testuser23",
	"active": true,
	"urn:ibm:idbrokerage:params:scim:schemas:extension:PosixLinuxAccount:2.0:User": {
		"erPosixCron": false,
		"erPosixShell": "/usr/sbin/nologin",
		"erPosixGecos": "testuser23",
		"erPosixAT": false,
		"eruid": "testuser23",
		"erPosixPwdWarnAge": 7,
		"eraccountstatus": 0,
		"erPosixMaxPwdAge": 99999,
		"erPosixForcePwdChange": false,
		"erPosixUMask": "",
		"erPosixMinPwdAge": 0,
		"erPosixLoginRetries": 0,
		"erPosixExpireDate": "2016-07-15T17:14:00Z"
	},
	"meta": {
		"created": "2016-08-30T12:47:00Z",
		"location": "https://www.example.com:8443/BrokerageService/identity/Targets/2633394108361159400/Users/6468932493076800148/",
		"resourceType": "User",
		"lastModified": "2016-08-30T12:47:00Z"
	}
}
 </doc></response><response status="404">
<doc>Not Found, The requested service does not exist</doc>
<doc>

{
	"schemas": ["urn:ietf:params:scim:api:messages:2.0:Error"],
	"detail": "Specified target 263339410836115940 not found.",
	"status": "404"
}

 </doc></response><response status="401">
<doc>UnAuthorized</doc>
</response><response status="403">
<doc>Forbidden</doc>
</response><response status="409">
<doc>Conflict, An account with the specified userName already exists.</doc>
<doc>

 {

 "schemas":["urn:ietf:params:scim:api:messages:2.0:Error"],

 "detail":"Account Creation Failed. user already exists",

 "status": "409"

 }

 </doc></response><response status="500">
<doc>An internal error occurred</doc>
<doc>

 {

 "schemas": ["urn:ietf:params:scim:api:messages:2.0:Error"],

 "detail":
 "An internal error occured in the system while processing the request",

 "status": "500"

 }

 </doc></response></method>
</resource>
</resources>
</application>
