<html>
<head>
<link rel="stylesheet" type="text/css" href="home.css">
</head>
<body>
<div>
<h2>Identity Governance and Intelligence REST APIs Doc</h2>
</div>
<div>
<h3>Prerequisites</h3>
<p>
Before to proceed you must be familiar with the following technologies:
<ul>
<li>RESTful API</li>
<li>JSON (JavaScript Object Notation)</li>
<li>SCIM specifications (RFC7643, RFC7644) </li>
</ul>

You must also have an understanding of the Identity Governance and Intelligence solution.
</p>

<h3>Restrictions</h3>
<p>
The SCIM Framework realized provides limitations on original SCIM features that include filtering, paging, patch operations and bulk.<br>

In particular, SCIM query filter expressions with <code>or</code> logic operator or parenthesis or brackets are not supported. <br>At this stage supported operators are the following:

<ul>
<li><code>and</code> logic operator</li>
<li><code>eq</code> equals </li>
<li><code>co</code> contains </li>
<li><code>sw</code> starts with </li>
<li><code>ew</code> ends with</li>
</ul>
Moreover, in filter string each attribute must be preceded by the urn (e.g. <code>urn:ietf:params:scim:schemas:core:2.0:User:name.givenName co \"James\"</code>). <br>
Additionally, in SCIM search request the paging mechanism adopted is different from the SCIM specification. The paging mechanism actuated is <em>page based</em>, where the <code>startPage</code> field of SCIM search request  indicates the page target and the <code>count</code> field specifies the number of element in that page.<br>
Additionally, in the SCIM search request attributes selection by means <code>attributes</code> and <code>excludedAttributes</code> attributes is not implemented yet.

<br><br>

PATCH operations are not implemented yet, are instead available replace operations.<br><br>
BULK operations are not implemented yet.<br><br>

Some SCIM standard attributes are not mapped in IGI data model. You can find this information looking at the Resource Schema. 


</p>

<h3>Authorization</h3>
<p>
When calling the SCIM API, you'll need to use an API Token generated calling <em>Login</em> API method.<br>

You must pass the token in <code>"Authorization"</code> header: e.g. 
<code>
Authorization : Bearer WwgdmVyc2lvbj0iMS4wIiBlbmNv
</code>

</p>

<h3>How to read this document</h3>
<p>
Every API is described by the following sections:
<ul>
<li>URL: endpoint to call the API </li>
<li>Method:	HTTP Method (GET, POST, DELETE, PUT)</li>
<li>Attributes: represent the <em>query param</em></li>
<li>Parameters: represent the <em>path param</em></li>
<li>Headers: represent the <em>HTTP header fields</em></li>
<li>Request body: represent the JSON object to send in POST or PUT operation. This object is defined through the URN written in Description coloumn. You can obtain the object definition calling <em>Resource Schema</em> API passing the URN.
</ul>
</p>

<h3>ARM Workflow</h3>
<p>
REST API for Access Request implments only User Entitlement assignment workflow.
In order to operate this workflow, the following step must be executed:
<h4>Generate Request</h4>
<ol>
<li>Login</li>
<li>Find GEN type workflow</li>
<li>Find users by workflow</li>
<li>Find entitlement for the selected user (to update or remove entitlements)</li>
<li>Find role to add for selected user (to add entitlements)</li>
<li>Generate request with the entitlements to add and/or to remove for the selected user as beneficiary</li>
</ol>
<h4>Authorize (or Execute) Generated Request</h4>
<ol>
<li>Login as an approver account</li>
<li>Find AUTH type workflow</li>
<li>Find requests to work</li>
<li>Find detail for the selected request</li>
<li>Authorize (or eventually Execute) the selected request</li>
</ol>
</p>
</div>
</body>
</html>