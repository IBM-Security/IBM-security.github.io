<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Authenticate with Security Verify Access</doc>
<resources base="">
<resource path="https://{appliance_hostname}/iam/access/v8/policyattachments/pdadmin">
<param type="path" name="appliance_hostname">
<doc>Host name of the appliance.</doc>
</param>
<method name="POST" id="Invoke a pdadmin command to login to Security Verify Access"><doc>   To work with protected objects you may need to authenticate as administrator with Security                    Verify Access. To authenticate, issue an HTTP POST  				  command on the policy attachments pdadmin resource URI.  In the POST DATA,  				  specify the command "setCredential" and provide the username, password and optionally, the secure domain if not using the default. </doc>
<request>
<doc>
 POST https://{appliance_hostname}/iam/access/v8/policyattachments/pdadmin

 To set the credentials for attaching policies to resources in the default
 secure domain.

 POST_DATA: {
 "command":"setCredential",
 "username":"sec_master",
 "password":"secmasterpw"
 }


 To set the credentials for attaching policies to resources in a custom
 secure domain.

 POST_DATA: {
 "command":"setCredential",
 "username":"sec_master",
 "password":"secmasterpw",
 "domain":"customDomain"
 }

 </doc><param name="Authorization: Basic" style="header">
<doc>Basic authentication header. </doc></param>
<param name="Accept:application/json" style="header">
<doc>Required for requests to the service. </doc></param>
</request>
<response status="200">
<doc>OK. The request was successful.</doc>
<doc>
 200 OK
 [{}]

 </doc><param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
</response><response status="204">
<doc>No content returned. The Policy Server has not been configured.</doc>
<doc>
 204 No Content
 </doc></response><response status="400">
<doc>Bad Request. There is a problem with the request. The JSON result describes the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="404">
<doc>Not Found. The requested service does not exist. The JSON message indicates which resource.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="409">
<doc>Conflict. The JSON result indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="500">
<doc>An internal error occurred. The JSON message indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response></method>
</resource>
</resources>
</application>
