<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Retrieve a list of obligations</doc>
<resources base="">
<resource path="https://{appliance_hostname}/iam/access/v8/obligations/">
<param type="path" name="appliance_hostname">
<doc>Host name of the appliance.</doc>
</param>
<param type="query" name="sortBy">
<doc>(Optional) The response field name that the returned data is sorted by. Precede the field name with a plus sign (+) for ascending order and a minus sign (-) for descending order.  Separate multiple field names by a comma. For example&#58; sortBy=+fieldA or sortBy=-fieldB</doc>
</param>
<param type="query" name="filter">
<doc>(Optional) One or more filter-statements, where filter-statement consists of &lt;name&gt;, &lt;operator&gt;, or &lt;expression&gt;. The &lt;name&gt; is the field name to apply the filter to. The &lt;operator&gt; is one of the following comparator operators&#58; equals, gt, ge, lt, le, notequal, startswith, endswith, contains, or containsignorecase. The &lt;expression&gt; indicates the value to be included in the results. Multiple filter-statements can be combined with ' and '. The filter must be URL-safe encoded. For example&#58; filter=fieldA%20contains%20scr%20and%20fieldB%20gt%205.</doc>
</param>
<method name="GET" id="Retrieve a list of obligations"><doc>   To retrieve information on existing obligations, issue an HTTP  				     GET command on the obligations resource URI. Qualify the list returned  				     by specifying one or more query parameters: sortBy or filter. </doc>
<request>
<doc>
 Retrieve a list of existing obligations sorted ascendingly by name:

 GET https://{appliance_hostname}/iam/access/v8/obligations/?sortBy=+name

 Retrieve the obligations that are used for registering devices sorted alphabetically:

 GET https://{appliance_hostname}/iam/access/v8/obligations/
 ?filter=obligationURI%20contains%20device&amp;sortBy=+name

 </doc><param name="Authorization: Basic" style="header">
<doc>Basic authentication header. </doc></param>
<param name="Accept:application/json" style="header">
<doc>Required for requests to the service. </doc></param>
</request>
<response status="200">
<doc>OK. The request was successful.</doc>
<doc>
 200 OK
 [
 {"id":"9",
 "description":"Notify department QSA about all devices registered.",
 "name":"Notify Device Registered",
 "parameters":[{"name":"userid","label":"userid","datatype":"String"}],
 "type":"Obligation",
 "obligationURI":"urn:XXX:security:obligation:notify_device_register",
 "predefined":false,
 "typeId":"1",
 "properties":[]
 },
 {
 "id":"1",
 "description":"Register a device",
 "name":"Register Device",
 "parameters":[],
 "type":"Obligation",
 "obligationURI":"urn:ibm:security:obligation:register_device",
 "predefined":true,
 "typeId":"2",
 "properties":[]
 }
 ]
 </doc><param name="Content-Range:items n-nn/nnn" style="header">
<doc>Indicates which records out of the total number of records were returned in a format similar to the following example&#58; items 0-49/100. </doc></param>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="obligationJsonResponse" mediatype="application/json">
<doc>Note: Response body is an array.</doc><param style="plain" name="id" type="String" optional="No" >
<doc>Internally assigned ID value of the obligation.</doc>
</param>
<param style="plain" name="description" type="String" optional="No" >
<doc>A description of the obligation.</doc>
</param>
<param style="plain" name="name" type="String" optional="No" >
<doc>A unique name for the obligation.</doc>
</param>
<param style="plain" name="parameters" type="obligationParameter" optional="No"  repeating="true">
<doc>Array of parameters associated with the obligation.</doc>
</param>
<param style="plain" name="type" type="String" optional="No" >
<doc>"Obligation"</doc>
</param>
<param style="plain" name="obligationURI" type="String" optional="No" >
<doc>The identifier of the obligation that is used in generated XACML.</doc>
</param>
<param style="plain" name="predefined" type="Boolean" optional="No" >
<doc>True, if the obligation is predefined and ships with the product; false, if the obligation is custom defined. Predefined obligations cannot be modified or deleted.</doc>
</param>
<param style="plain" name="typeId" type="String" optional="No" >
<doc>The obligation type id that the obligation is based on.</doc>
</param>
<param style="plain" name="properties" type="obligationProperty" optional="No"  repeating="true">
<doc>Array of properties associated with the obligations. </doc>
</param>
</representation><representation name="obligationParameter" mediatype="application/json">
<param style="plain" name="name" type="String" optional="No" >
<doc>A unique name for the parameter.</doc>
</param>
<param style="plain" name="label" type="String" optional="No" >
<doc>Label for the parameter.</doc>
</param>
<param style="plain" name="datatype" type="String" optional="No" >
<doc>Data type for the parameter. Valid values are 'Boolean', 'Date', 'Double', 'Integer', 'String', 'Time', or 'X500Name'. </doc>
</param>
</representation><representation name="obligationProperty" mediatype="application/json">
<param style="plain" name="key" type="String" optional="No" >
<doc>A unique key for the property.</doc>
</param>
<param style="plain" name="value" type="String" optional="No" >
<doc>The value for the property </doc>
</param>
</representation></response><response status="400">
<doc>Bad Request. There is a problem with the request. The JSON result describes the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="404">
<doc>Not Found. The requested service does not exist. The JSON message indicates which resource.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="500">
<doc>An internal error occurred. The JSON message indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response></method>
</resource>
</resources>
</application>
