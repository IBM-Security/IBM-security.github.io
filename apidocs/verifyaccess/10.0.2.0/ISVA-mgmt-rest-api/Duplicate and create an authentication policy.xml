<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Duplicate and create an authentication policy</doc>
<resources base="">
<resource path="https://{appliance_hostname}/iam/access/v8/authentication/policies">
<param type="path" name="appliance_hostname">
<doc>Host name of the appliance.</doc>
</param>
<method name="POST" id="Duplicate and create an authentication policy."><doc>   This method is not intended specifically for the creation of a new authentication policy, but                    rather to support the duplication of an existing authentication policy.  The  POST DATA should                    come directly from the response data of an HTTP GET command for an existing policy. </doc>
<doc>   Policy creation is only supported using the Policy Editor on the appliance local                    management interface (LMI). However, the POST command of the policies resource URI                    can be used to create a new policy by duplicating an existing policy. Use policy                    duplication to migrate policy to a different appliance or to restore a policy from                    a backup. </doc>
<doc>   The content of the 'policy' attribute must only contain XML that has been exported from                    another Verify Access appliance or has otherwise been created using the LMI policy editor. </doc>
<doc>   To duplicate and existing policy, first issue an HTTP GET command on the authentication                    policies resource URI specifying the policy_id of the existing policy that you want to                    duplicate: https://{appliance_hostname}/iam/access/v8/authentication/policies/{policy_id}.                    Carefully copy the entire response maintaining all spaces and escape characters in the                    'policy' element of the response payload . Use it as the request payload for the POST                    command of the policies resource URI, as described below. Make any further updates to                    the generated XML of the newly created policy using the Policy Editor on the LMI. </doc>
<request>
<doc>

 POST https://{other_appliance_hostname}/iam/access/v8/authentication/policies/

 POST_DATA:
 {
   "description":"My Policy",
   "name":"MyPolicy",
   "uri":"urn:ibm:security:authentication:asf:ap1",
   "policy":"&lt;Policy xmlns=&#92;"urn:ibm:security:authentication:policy:1.0:schema&#92;"
   PolicyId=&#92;"urn:ibm:security:authentication:asf:ap1&#92;"&gt;
   &lt;Description&gt;ap1&lt;&#92;/Description&gt;&lt;Step id=&#92;"id14267910427230&#92;"
   type=&#92;"Authenticator&#92;"&gt;&lt;Authenticator id=&#92;"id14267910427231&#92;"
   AuthenticatorId=&#92;"urn:ibm:security:authentication:asf:mechanism:password&#92;"&#92;/&gt;&lt;&#92;/Step&gt;
   &lt;&#92;/Policy&gt;",
   "enabled":true
 }

</doc><doc>
 All authentication mechanisms referred to within the policy XML must already exist on the appliance.  A list
 of authentication mechanisms configured on the appliance issuing an HTTP GET request to the authentication
 mechanism resource URI: GET https://{appliance_hostname}/iam/access/v8/authentication/mechanisms
 </doc><param name="Authorization: Basic" style="header">
<doc>Basic authentication header. </doc></param>
<param name="Accept:application/json" style="header">
<doc>Required for requests to the service. </doc></param>
<representation name="authPolicyCreateJsonRequest" mediatype="application/json">
<param style="plain" name="name" type="String" optional="No" >
<doc>Specify a unique name for the authentication policy.</doc>
</param>
<param style="plain" name="policy" type="String" optional="No" >
<doc>Configured policy content that uses the specified authentication policy dialect. This is represented as a single-escaped character string.</doc>
</param>
<param style="plain" name="uri" type="String" optional="No" >
<doc>Specify a unique identifier for the authentication policy.</doc>
</param>
<param style="plain" name="description" type="String" optional="Yes" >
<doc>Description of the authentication policy.</doc>
</param>
<param style="plain" name="dialect" type="String" optional="Yes" >
<doc>Authentication policy specification used to format the authentication policy. The only valid value is "urn:ibm:security:authentication:policy:1.0:schema".</doc>
</param>
<param style="plain" name="enabled" type="Boolean" optional="No" >
<doc>True if the policy is enabled and invocable at runtime.  Set to false to disable the policy. If the policy is disabled it cannot be used by context based access. </doc>
</param>
</representation></request>
<response status="204">
<doc>No content returned.  The request was successful.</doc>
</response><response status="400">
<doc>Bad Request. There is a problem with the request. The JSON result describes the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="404">
<doc>Not Found. The requested service does not exist. The JSON message indicates which resource.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="409">
<doc>Conflict. The JSON result indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="500">
<doc>An internal error occurred. The JSON message indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response></method>
</resource>
</resources>
</application>
