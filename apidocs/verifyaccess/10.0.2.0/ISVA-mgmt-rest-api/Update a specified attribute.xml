<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Update a specified attribute</doc>
<resources base="">
<resource path="https://{appliance_hostname}/iam/access/v8/attributes/{attribute_id}">
<param type="path" name="appliance_hostname">
<doc>Host name of the appliance.</doc>
</param>
<param type="path" name="attribute_id">
<doc>The system-assigned attribute ID value.</doc>
</param>
<method name="PUT" id="Update a specified attribute"><doc>   To update the settings of an existing attribute, issue an HTTP PUT command on the   					 attributes resource URI specifying the ID of the attribute to be updated.  The   					 only field that can be updated for a predefined attribute is the storageDomain.    					 If an attribute is included in a policy, you cannot make further updates to the  				     attribute. </doc>
<doc>   Note: For the changes to take effect, they must be deployed as                           described in the Configuration changes commit process. </doc>
<request>
<doc>
 Update the type values of the attribute myAttribute, id 45, to be used
 in both risk profiles and policies.  All the required fields should be included 
 in the PUT_DATA with the values updated where needed.  Note that in this example,
 the optional "Issuer" field was not specified so its value is reset to null
 following the execution of this command.
 
 PUT https://{appliance_hostname}/iam/access/v8/attributes/45
 
 PUT_DATA: {
 "category":"Environment",
 "matcher":"1",
 "description":"A test attribute",
 "name":"myAttribute",
 "datatype":"String",
 "storageDomain":{"session":false,
                  "behavior":false, 
                  "device":true},
 "type":{"risk":true,
         "policy":true},
 "uri":"my.attribute",
 "predefined":false
 }
 
 Note:  To determine the matcher value, issue an HTTP GET command on the 
 attribute-matchers resource URI:  
 https://{appliance_hostname}/iam/access/v8/attribute-matchers/
 
 </doc><doc>
 To determine the attribute_id value of the attribute to be updated, issue an HTTP GET command on the
 attributes resource URI:  https://{appliance_hostname}/iam/access/v8/attributes/.
 </doc><param name="Authorization: Basic" style="header">
<doc>Basic authentication header. </doc></param>
<param name="Accept:application/json" style="header">
<doc>Required for requests to the service. </doc></param>
<representation name="attributeJsonRequest" mediatype="application/json">
<param style="plain" name="category" type="String" optional="No" >
<doc>The part of the XACML request that the attribute value comes from: 'Subject', 'Environment', 'Action', 'Resource'.</doc>
</param>
<param style="plain" name="matcher" type="String" optional="No" >
<doc>ID of the attribute matcher that is used to compare the value of this attribute in an incoming device fingerprint with an existing device fingerprint of the user.</doc>
</param>
<param style="plain" name="issuer" type="String" optional="Yes" >
<doc>The name of the policy information point from which the value of the attribute is retrieved. If a policy information point is not used then set this field to "". If not provided, the field is set to null.</doc>
</param>
<param style="plain" name="description" type="String" optional="Yes" >
<doc>A description of the attribute. If not provided, the description is set to null.</doc>
</param>
<param style="plain" name="name" type="String" optional="No" >
<doc>A unique name for the attribute.</doc>
</param>
<param style="plain" name="datatype" type="String" optional="No" >
<doc>The type of values that the attribute can accept: 'String','Integer','Double','Boolean','Time','Date','X500Name'.</doc>
</param>
<param style="plain" name="storageDomain" type="attributeStorageDomain" optional="No" >
<doc>Boolean indicators of where the attribute is stored:  session, behavior, device.</doc>
</param>
<param style="plain" name="type" type="attributeType" optional="No" >
<doc>Boolean indicators of where the attribute is used: policy, risk profiles.</doc>
</param>
<param style="plain" name="uri" type="String" optional="No" >
<doc>The identifier of the attribute that is used in the generated XACML policy.</doc>
</param>
<param style="plain" name="predefined" type="Boolean" optional="No" >
<doc>False to indicate that the attribute is custom defined. </doc>
</param>
</representation><representation name="attributeStorageDomain" mediatype="application/json">
<param style="plain" name="session" type="Boolean" optional="No" >
<doc>True if the attribute is collected in the user session.  Session attributes are stored temporarily until the session times out.  If the device is registered, they are also stored as part of the device fingerprint.</doc>
</param>
<param style="plain" name="behavior" type="Boolean" optional="No" >
<doc>True if historic data for this attribute is stored in the database and used for behavior-based attribute matching.</doc>
</param>
<param style="plain" name="device" type="Boolean" optional="No" >
<doc>True if the attribute is stored when a device is registered as part of the device fingerprint. </doc>
</param>
</representation><representation name="attributeType" mediatype="application/json">
<param style="plain" name="risk" type="Boolean" optional="No" >
<doc>True if the attribute is used in risk profiles.</doc>
</param>
<param style="plain" name="policy" type="Boolean" optional="No" >
<doc>True if the attribute is used in policies. </doc>
</param>
</representation></request>
<response status="204">
<doc>No content returned.  The request was successful.</doc>
<doc>204 NO CONTENT</doc></response><response status="400">
<doc>Bad Request. There is a problem with the request. The JSON result describes the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="404">
<doc>Not Found. The requested service does not exist. The JSON message indicates which resource.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="409">
<doc>Conflict. The JSON result indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="500">
<doc>An internal error occurred. The JSON message indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response></method>
</resource>
</resources>
</application>
