<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Retrieve a list of resources in a protected object space</doc>
<resources base="">
<resource path="https://{appliance_hostname}/iam/access/v8/policyattachments/pdadmin">
<param type="path" name="appliance_hostname">
<doc>Host name of the appliance.</doc>
</param>
<method name="POST" id="Invoke a pdadmin command to retrieve a protected object list under a specified"><doc>   To retrieve a list of containers and resources in a protected object space,  				  issue an HTTP POST command on the policy attachments pdadmin resource URI.  In the POST  				  DATA, specify the command "object list" and provide the fully-qualified name of the object                    space path. This command only returns all resources and containers directly associated                    with the specified path. </doc>
<doc>   A protected object space is the logical and hierarchical portrayal                    of resources that belong to a domain.  It consists of resource objects                    and container objects.  Security policy can be applied to both resource                    and container objects. </doc>
<request>
<doc>
 Retrieve a list of web containers in WebSEAL:

 POST https://{appliance_hostname}/iam/access/v8/policyattachments/pdadmin

 POST_DATA: {
 "command":"object list",
 "object":"/WebSEAL"
 }

 Retrieve a list of containers and resources in the reverse proxy DTest1:

 POST https://{appliance_hostname}/iam/access/v8/policyattachments/pdadmin

 POST_DATA: {
 "command":"object list",
 "object":"/WebSEAL/myServer-DTest1"
 }

 Retrieve a list of containers and resources in the WebSEAL
 junction benefits/medical:

 POST_DATA: {
 "command":"object list",
 "object":"/WebSEAL/myServer-jct/benefits/medical"
 }

 </doc><doc> If an authentication failure message is returned, issue an HTTP POST command on the
                policy attachments pdadmin resource URI.  Specify the command "setCredential" and the
                username and password to login to the Security Verify Access in the POST DATA.</doc><param name="Authorization: Basic" style="header">
<doc>Basic authentication header. </doc></param>
<param name="Accept:application/json" style="header">
<doc>Required for requests to the service. </doc></param>
</request>
<response status="200">
<doc>OK. The request was successful.</doc>
<doc>
 200 OK
 [
 {
 "object":"/WebSEAL/myServer-DTest1/icons"
 },
 {
 "object":"/WebSEAL/myServer-DTest1/index.html"
 },
 {
 "object":"/WebSEAL/myServer-DTest1/pics"
 }
 ]

 </doc><param name="Content-Range:items n-nn/nnn" style="header">
<doc>Indicates which records out of the total number of records were returned in a format similar to the following example&#58; items 0-49/100. </doc></param>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="pdadminObjectListJsonResponse" mediatype="application/json">
<doc>Note: Response body is an array.</doc><param style="plain" name="object" type="String" optional="No"  repeating="true">
<doc>List of resource and container objects in the queried object space. </doc>
</param>
</representation></response><response status="204">
<doc>No content returned. The Policy Server has not been configured.</doc>
<doc>
 204 No Content
 </doc></response><response status="400">
<doc>Bad Request. There is a problem with the request. The JSON result describes the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="404">
<doc>Not Found. The requested service does not exist. The JSON message indicates which resource.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="409">
<doc>Conflict. The JSON result indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="500">
<doc>An internal error occurred. The JSON message indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response></method>
</resource>
</resources>
</application>
