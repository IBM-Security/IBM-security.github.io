<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Retrieve a list of mapping rules</doc>
<resources base="">
<resource path="https://{appliance_hostname}/iam/access/v8/mapping-rules/">
<param type="path" name="appliance_hostname">
<doc>Host name of the appliance.</doc>
</param>
<param type="query" name="sortBy">
<doc>(Optional) The response field name that the returned data is sorted by. Precede the field name with a plus sign (+) for ascending order and a minus sign (-) for descending order.  Separate multiple field names by a comma. For example&#58; sortBy=+fieldA or sortBy=-fieldB</doc>
</param>
<param type="query" name="count">
<doc>(Optional) The number of records to return.</doc>
</param>
<param type="query" name="start">
<doc>(Optional) The record index from which to start returns. If specified, also define the count query parameter. Default is 0.</doc>
</param>
<param type="query" name="filter">
<doc>(Optional) One or more filter-statements, where filter-statement consists of &lt;name&gt;, &lt;operator&gt;, or &lt;expression&gt;. The &lt;name&gt; is the field name to apply the filter to. The &lt;operator&gt; is one of the following comparator operators&#58; equals, gt, ge, lt, le, notequal, startswith, endswith, contains, or containsignorecase. The &lt;expression&gt; indicates the value to be included in the results. Multiple filter-statements can be combined with ' and '. The filter must be URL-safe encoded. For example&#58; filter=fieldA%20contains%20scr%20and%20fieldB%20gt%205.</doc>
</param>
<method name="GET" id="Retrieve a list of mapping rules"><doc>   To retrieve information on existing mapping rules, issue an HTTP GET command on the                       mapping rules resource URI. Qualify the list returned by specifying one or more                       query parameters: sortBy, count, start, or filter. </doc>
<request>
<doc>
 Retrieve a list of existing OAUTH mapping rules sorted in ascending order by name:

 GET https://{appliance_hostname}/iam/access/v8/mapping-rules/
 ?filter=category%20equals%20OAUTH&amp;sortBy=+name

 Retrieve OAUTH mapping rules associated with the API protection definition,
 myDefinition (case-sensitive), sorted in ascending order by name:

 GET https://{appliance_hostname}/iam/access/v8/mapping-rules/
 ?filter=category%20equals%20OAUTH%20and%20name%20contains%20myDefinition&amp;sortBy=+name

 </doc><param name="Authorization: Basic" style="header">
<doc>Basic authentication header. </doc></param>
<param name="Accept:application/json" style="header">
<doc>Required for requests to the service. </doc></param>
</request>
<response status="200">
<doc>OK. The request was successful.</doc>
<doc>
 200 OK
 [
 {
 "content":"importPackage(Packages.com.tivoli.am.fim.trustserver.sts);&#92;n
            importPackage(Packages.com.tivoli.am.fim.trustserver.sts.uuser);
            &#92;nimportClass(Packages.com.tivoli.am.fim.trustserver.sts.util
            ... whole rule contents ...
            &#92;" + headerKeys[i] + &#92;"=&#92;" + headerValues[j]);&#92;n}",
 "id":"8",
 "category":"OAUTH",
 "name":"MyDefinitionPostTokenGeneration"
 "fileName":"my_post_token_gen.js"
 "predefined":false
 },
 {
 "content":"importPackage(Packages.com.tivoli.am.fim.trustserver.sts);&#92;n
            importPackage(Packages.com.tivoli.am.fim.trustserver.sts.uuser);
            &#92;nimportClass(Packages.com.tivoli.am.fim.trustserver.sts.util
            ... whole rule contents ...
            "No response from server. Authentication failed.&#92;");&#92;n",
 "id":"7",
 "category":"OAUTH",
 "name":"MyDefinitionPreTokenGeneration"
 "fileName":"my_pre_token_gen.js",
 "predefined":false,
 "domain":dom0
 }
 ]

 </doc><param name="Content-Range:items n-nn/nnn" style="header">
<doc>Indicates which records out of the total number of records were returned in a format similar to the following example&#58; items 0-49/100. </doc></param>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="mappingRuleJsonResponse" mediatype="application/json">
<doc>Note: Response body is an array.</doc><param style="plain" name="content" type="String" optional="No" >
<doc>The content of the mapping rule, represented as an escaped character string.</doc>
</param>
<param style="plain" name="id" type="String" optional="No" >
<doc>Internally assigned ID value of the mapping rule.</doc>
</param>
<param style="plain" name="category" type="String" optional="No" >
<doc>A grouping of related mapping rules.  For example, category 'OAUTH' identifies all the rules associated with the OAUTH flow.</doc>
</param>
<param style="plain" name="name" type="String" optional="No" >
<doc>A unique name for the mapping rule.</doc>
</param>
<param style="plain" name="fileName" type="String" optional="No" >
<doc>A unique filename used to identify this mapping rule.</doc>
</param>
<param style="plain" name="prefedined" type="Boolean" optional="No" >
<doc>False to indicate this mapping rule is custom defined.</doc>
</param>
<param style="plain" name="domain" type="String" optional="No" >
<doc>Domain in which this mapping rule belongs. </doc>
</param>
</representation></response><response status="400">
<doc>Bad Request. There is a problem with the request. The JSON result describes the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="404">
<doc>Not Found. The requested service does not exist. The JSON message indicates which resource.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="500">
<doc>An internal error occurred. The JSON message indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response></method>
</resource>
</resources>
</application>
