<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>OAuth configuration for a reverse proxy instance</doc>
<resources base="">
<resource path="https://{appliance_hostname}/wga/reverseproxy/{id}/oauth_config">
<param type="path" name="appliance_hostname">
<doc>Host name of the appliance.</doc>
</param>
<param type="path" name="id">
<doc>Name of the instance to act on, which is a unique name that identifies the instance</doc>
</param>
<method name="POST" id="OAuth configuration for a reverse proxy instance"><doc> This RESTful web service is used to add protocol specific configuration to an existing reverse proxy instance for a given OAuth Definition. The reverse proxy configuration file is modified, a new junction (Default is /mga) is configured, and ACLs are created and attached. </doc>
<doc> The HTTP-Tag-Value attribute will be added to the /mga junction object to propagate the user_session_id to the OAuth runtime. </doc>
<doc> The following configuration entry and object space changes will be made; after the API is invoked the log file will contain all changes too:<br/>  <dl style="margin-top:0px">  <dt>[server]</dt>  <dd>http-method-disabled-remote = TRACE,CONNECT</dd>  <dt>[eai] # Changes to this stanza are only made if configured for browser interaction.</dt>  <dd>eai-auth = https</dd>  <dd>retain-eai-session = yes</dd>  <dd>eai-redir-url-priority = yes</dd>  <dt>[eai-trigger-urls] # Changes to this stanza are only made if configured for browser interaction.</dt>  <dd>trigger = /mga/sps/oauth/oauth20/session*</dd>  <dd>trigger = /mga/sps/auth*</dd>  <dd>trigger = /mga/sps/authservice/authentication*</dd>  <dt>[azn-decision-info] # Changes to this stanza are only made if configured for API protection</dt>  <dd>HTTP_HOST_HDR = header:host</dd>  <dd>HTTP_REQUEST_SCHEME = scheme</dd>  <dd>HTTP_REQUEST_METHOD = method</dd>  <dd>HTTP_REQUEST_URI = uri</dd>  <dd>HTTP_AZN_HDR = header:authorization</dd>  <dd>HTTP_CONTENT_TYPE_HDR = header:content-type</dd>  <dd>HTTP_TRANSFER_ENCODING_HDR = header:transfer-encoding</dd>  <dt>[oauth] # Changes to this stanza are only made if configured for API protection</dt>  <dd>oauth-auth = https </dd>  <dd>default-fed-id = https://localhost/sps/oauth/oauth20</dd>  <dd>fed-id-param = FederationId</dd>  <dd>cluster-name = oauth-cluster</dd>  <dd>user-identity-attribute = username</dd>  <dd>continue-on-auth-failure = true</dd>  <dt>[tfim-cluster:oauth-cluster] # Changes to this stanza are only made if configured for API protection</dt>  <dd>handle-pool-size = 10</dd>  <dd>handle-idle-timeout = 240</dd>  <dd>timeout = 240</dd>  <dd>server = 9,https://127.0.0.1:443/TrustServerWS/SecurityTokenServiceWST13</dd>  <dd>basic-auth-user = easuser</dd>  <dd>basic-auth-passwd = ####</dd>  <dd>ssl-keyfile = pdsrv.kdb</dd>  <dd>ssl-keyfile-stash = pdsrv.sth</dd>  <dt>[session]</dt>  <dd>require-mpa = no</dd>  <dd>user-session-ids = yes</dd>  <dt>[session-http-headers]</dt>  <dd>Authorization = https</dd>  <dt>[forms] # Changes to this stanza are only made if configured for API protection and not browser interaction.</dt>  <dd>forms-auth = none</dd>  </dl>  <dl style="margin-top:0px">  <dt>Object space changes</dt>  <dd>server task default-webseald-isam create -t ssl -h 127.0.0.1 -p 443 -b ignore -c all -j -J inhead -k -r -e utf8_uri -f -q /sps/cgi-bin/query_contents /mga</dd>  <dd>object modify /WebSEAL/isam-default/mga set attribute HTTP-Tag-Value user_session_id=user_session_id</dd>  <dd>acl create isam_oauth_anyauth</dd>  <dd>acl modify isam_oauth_anyauth description OAuth_Auto_Configuration</dd>  <dd>acl modify isam_oauth_anyauth set group iv-admin TcmdbsvaBRrxl</dd>  <dd>acl modify isam_oauth_anyauth set any-other Tr</dd>  <dd>acl modify isam_oauth_anyauth set unauth T</dd>  <dd>acl create isam_oauth_nobody</dd>  <dd>acl modify isam_oauth_nobody description OAuth_Auto_Configuration</dd>  <dd>acl modify isam_oauth_nobody set group iv-admin TcmdbsvaBRrxl</dd>  <dd>acl modify isam_oauth_nobody set any-other T</dd>  <dd>acl modify isam_oauth_nobody set unauth T</dd>  <dd>acl create isam_oauth_rest</dd>  <dd>acl modify isam_oauth_rest description OAuth_Auto_Configuration</dd>  <dd>acl modify isam_oauth_rest set group iv-admin TcmdbsvaBRrxl</dd>  <dd>acl modify isam_oauth_rest set any-other Tmdr</dd>  <dd>acl modify isam_oauth_rest set unauth T</dd>  <dd>acl create isam_oauth_rest_unauth</dd>  <dd>acl modify isam_oauth_rest_unauth description MMFA_Auto_Configuration</dd>  <dd>acl modify isam_oauth_rest_unauth set group iv-admin TcmdbsvaBRrxl</dd>  <dd>acl modify isam_oauth_rest_unauth set any-other Tmdrxl</dd>  <dd>acl modify isam_oauth_rest_unauth set unauth Tmdrxl</dd>  <dd>acl create isam_oauth_unauth</dd>  <dd>acl modify isam_oauth_unauth description OAuth_Auto_Configuration</dd>  <dd>acl modify isam_oauth_unauth set group iv-admin TcmdbsvaBRrxl</dd>  <dd>acl modify isam_oauth_unauth set any-other Tr</dd>  <dd>acl modify isam_oauth_unauth set unauth Tr</dd>  <dd>acl attach /WebSEAL/isam-default/mga isam_oauth_nobody</dd>  <dd>acl attach /WebSEAL/isam-default/mga/sps/auth isam_oauth_anyauth</dd>  <dd>acl attach /WebSEAL/isam-default/mga/sps/common/qr isam_oauth_anyauth</dd>  <dd>acl attach /WebSEAL/isam-default/mga/sps/mga/user/mgmt/clients isam_oauth_rest</dd>  <dd>acl attach /WebSEAL/isam-default/mga/sps/mga/user/mgmt/device isam_oauth_rest</dd>  <dd>acl attach /WebSEAL/isam-default/mga/sps/mga/user/mgmt/grant isam_oauth_rest</dd>  <dd>acl attach /WebSEAL/isam-default/mga/sps/mga/user/mgmt/html isam_oauth_anyauth</dd>  <dd>acl attach /WebSEAL/isam-default/mga/sps/oauth/oauth20/authorize isam_oauth_unauth</dd>  <dd>acl attach /WebSEAL/isam-default/mga/sps/oauth/oauth20/clients isam_oauth_anyauth</dd>  <dd>acl attach /WebSEAL/isam-default/mga/sps/oauth/oauth20/device_authorize isam_oauth_unauth</dd>  <dd>acl attach /WebSEAL/isam-default/mga/sps/oauth/oauth20/introspect isam_oauth_unauth</dd>  <dd>acl attach /WebSEAL/isam-default/mga/sps/oauth/oauth20/jwks isam_oauth_unauth</dd>  <dd>acl attach /WebSEAL/isam-default/mga/sps/oauth/oauth20/metadata isam_oauth_unauth</dd>  <dd>acl attach /WebSEAL/isam-default/mga/sps/oauth/oauth20/register isam_oauth_rest</dd>  <dd>acl attach /WebSEAL/isam-default/mga/sps/oauth/oauth20/revoke isam_oauth_unauth</dd>  <dd>acl attach /WebSEAL/isam-default/mga/sps/oauth/oauth20/session isam_oauth_unauth</dd>  <dd>acl attach /WebSEAL/isam-default/mga/sps/oauth/oauth20/token isam_oauth_unauth</dd>  <dd>acl attach /WebSEAL/isam-default/mga/sps/oauth/oauth20/user_authorize isam_oauth_anyauth</dd>  <dd>acl attach /WebSEAL/isam-default/mga/sps/oauth/oauth20/userinfo isam_oauth_unauth</dd>  <dd>acl attach /WebSEAL/isam-default/mga/sps/static isam_oauth_unauth</dd>  <dd>acl attach /WebSEAL/isam-default/mga/sps/wssoi isam_oauth_anyauth</dd>  <dd>acl attach /WebSEAL/isam-default/mga/sps/xauth isam_oauth_anyauth</dd>  </dl> </doc>
<request>
<doc>
 POST https://{appliance_hostname}/wga/reverseproxy/{instance_id}/oauth_config
 
 POST_DATA: {
   "hostname":"127.0.0.1",
   "port":"443",
   "username":"easuser",
   "password":"passw0rd",
   "browser":true,
   "api":true,
   "junction":"/mga"
 }

 cURL example:

  curl -vv -k --user admin:xxxxx -H 'Accept: application/json' -H 'Content-type: application/json' https://isam.host/wga/reverseproxy/default/oauth_config -d '
  {
  "hostname":"127.0.0.1",
  "port":"443",
  "username":"easuser",
  "password":"passw0rd",
  "browser":true,
  "api":true,
  "junction":"/mga"
  }'
 </doc><param name="Authorization" style="header">
<doc>Basic Authentication header </doc></param>
<param name="Accept:application/json" style="header">
<doc>Required for requests to the service </doc></param>
<representation name="reverseProxyOAuthConfigJson" mediatype="application/json">
<param style="plain" name="hostname" type="String" optional="No" >
<doc>The hostname of the runtime.</doc>
</param>
<param style="plain" name="port" type="Integer" optional="No" >
<doc>The port of the runtime. Must be the SSL port.</doc>
</param>
<param style="plain" name="username" type="String" optional="No" >
<doc>The username used to authenticate with the runtime.</doc>
</param>
<param style="plain" name="password" type="String" optional="No" >
<doc>The password used to authenticate with the runtime.</doc>
</param>
<param style="plain" name="reuse_certs" type="Boolean" optional="Yes" >
<doc>If the SSL certificate has already been saved, this flag indicates that the certificate should be reused instead of overwritten. Default is false.</doc>
</param>
<param style="plain" name="reuse_acls" type="Boolean" optional="Yes" >
<doc>A flag to indicate that any existing ACLs with the same name should be reused. If they are not reused, they will be replaced. Default is false .</doc>
</param>
<param style="plain" name="api" type="Boolean" optional="Yes" >
<doc>Should this reverse proxy be configured for API protection. Default is false.</doc>
</param>
<param style="plain" name="browser" type="Boolean" optional="Yes" >
<doc>Should this reverse proxy be configured for Browser interaction. Default is false.</doc>
</param>
<param style="plain" name="auth_register" type="Boolean" optional="Yes" >
<doc>Will the client registration endpoint require authentication.  Default is false.</doc>
</param>
<param style="plain" name="fapi_compliant" type="Boolean" optional="Yes" >
<doc>Configures reverse proxy instance to be FAPI Compliant.  Default is false.</doc>
</param>
<param style="plain" name="load_certificate" type="Boolean" optional="Yes" >
<doc>Determines whether the certificate is loaded automatically from the runtime server, or whether it needs to be manually added to the WebSEAL key file.  Default is true.</doc>
</param>
<param style="plain" name="junction" type="String" optional="No" >
<doc>Junction point to create. Default is /mga </doc>
</param>
</representation></request>
<response status="204">
<doc>The request was successful.</doc>
<doc>
 204 NO CONTENT
 </doc><param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
</response><response status="400">
<doc>There is a problem with the request. The JSON message describes the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="message" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="404">
<doc>File not Found, The requested service does not exist. The JSON message indicates which resource.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="message" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="500">
<doc>An internal error occurred. The JSON message indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="message" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response></method>
</resource>
</resources>
</application>
