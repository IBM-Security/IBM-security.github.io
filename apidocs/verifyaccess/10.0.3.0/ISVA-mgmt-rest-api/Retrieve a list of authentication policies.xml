<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Retrieve a list of authentication policies</doc>
<resources base="">
<resource path="https://{appliance_hostname}/iam/access/v8/authentication/policies/">
<param type="path" name="appliance_hostname">
<doc>Host name of the appliance.</doc>
</param>
<param type="query" name="start">
<doc>(Optional) The record index from which to start returns. If specified, also define the count query parameter. Default is 0.</doc>
</param>
<param type="query" name="count">
<doc>(Optional) The number of records to return.</doc>
</param>
<param type="query" name="filter">
<doc>(Optional) One or more filter-statements, where filter-statement consists of &lt;name&gt;, &lt;operator&gt;, or &lt;expression&gt;. The &lt;name&gt; is the field name to apply the filter to. The &lt;operator&gt; is one of the following comparator operators&#58; equals, gt, ge, lt, le, notequal, startswith, endswith, contains, or containsignorecase. The &lt;expression&gt; indicates the value to be included in the results. Multiple filter-statements can be combined with ' and '. The filter must be URL-safe encoded. For example&#58; filter=fieldA%20contains%20scr%20and%20fieldB%20gt%205.</doc>
</param>
<param type="query" name="sortBy">
<doc>(Optional) The response field name that the returned data is sorted by. Precede the field name with a plus sign (+) for ascending order and a minus sign (-) for descending order.  Separate multiple field names by a comma. For example&#58; sortBy=+fieldA or sortBy=-fieldB</doc>
</param>
<method name="GET" id="Retrieve a list of authentication policies"><doc>   To retrieve information about existing authentication policies, issue an HTTP GET command on the                    authentication policies resource URI. Qualify the list returned                    by specifying one or more of the following query parameters:                    start, count, filter or sortBy. </doc>
<doc>   When you retrieve a list of authentication policies, the policy content is                    not automatically returned. To view the policy content, issue an HTTP GET command on the policies                    resource URI that specifies a particular policy ID: https://{appliance_hostname}/iam/access/v8/authentication/policies/{policy_id}. </doc>
<request>
<doc>
 Retrieve all authentication policies:

 GET https://{appliance_hostname}/iam/access/v8/authentication/policies

 Retrieve all authentication policies whose name begins with the letter 'M' (case sensitive):

 GET https://{appliance_hostname}/iam/access/v8/policies/?filter=name%20startswith%20M

 Retrieve all authentication policies sorting by name, ascending:

 GET https://{appliance_hostname}/iam/access/v8/policies/?sortBy=+name
 </doc><param name="Authorization: Basic" style="header">
<doc>Basic authentication header. </doc></param>
<param name="Accept:application/json" style="header">
<doc>Required for requests to the service. </doc></param>
</request>
<response status="200">
<doc>OK. The request was successful.</doc>
<doc>
 200 OK
 [
   {
     "id":"1",
     "dialect":"urn:ibm:security:authentication:policy:1.0:schema",
     "description":"Two-factor authentication policy requiring both username password and one-time password authentications. The user may be prompted for the type of one-time password mechanism to use.",
     "userlastmodified":"admin",
     "name":"Two-factor - Username Password and OTP",
     "lastmodified":"2015-03-13T15:47:39Z",
     "datecreated":"2015-03-13T15:47:39Z",
     "predefined":true,
     "enabled":true,
     "uri","urn:ibm:security:authentication:asf:password_otp"
   },
   {
     "id":"2",
     "dialect":"urn:ibm:security:authentication:policy:1.0:schema",
     "description":"Counter-based one-time password authentication policy.",
     "userlastmodified":"admin",
     "name":"HOTP One-time Password",
     "lastmodified":"2015-03-13T15:47:39Z",
     "datecreated":"2015-03-13T15:47:39Z",
     "predefined":true,
     "enabled":true,
     "uri","urn:ibm:security:authentication:asf:hotp"
   },
 ...
 ]

 </doc><param name="Content-Range:items n-nn/nnn" style="header">
<doc>Indicates which records out of the total number of records were returned in a format similar to the following example&#58; items 0-49/100. </doc></param>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="authPolicyListJsonResponse" mediatype="application/json">
<doc>Note: Response body is an array.</doc><param style="plain" name="id" type="String" optional="No" >
<doc>Internally assigned ID value of the authentication policy.</doc>
</param>
<param style="plain" name="dialect" type="String" optional="No" >
<doc>Authentication policy specification used to format the authentication policy. The only valid value is "urn:ibm:security:authentication:policy:1.0:schema".</doc>
</param>
<param style="plain" name="description" type="String" optional="No" >
<doc>Description of the authentication policy.</doc>
</param>
<param style="plain" name="userlastmodified" type="String" optional="No" >
<doc>User ID of the user who last made modifications to this authentication policy.</doc>
</param>
<param style="plain" name="name" type="String" optional="No" >
<doc>A unique name for the authentication policy.</doc>
</param>
<param style="plain" name="lastmodified" type="String" optional="No" >
<doc>Specifies the date and time stamp that the authentication policy was last modified. The string is formatted as a JSON date which has the same format as the ISO-8601 standard: YYYY-MM-DDTHH:mm:ss.sssZ.</doc>
</param>
<param style="plain" name="datecreated" type="String" optional="No" >
<doc>Specifies the date and time stamp that the authentication policy was created. The string is formatted as a JSON date which has the same format as the ISO-8601 standard: YYYY-MM-DDTHH:mm:ss.sssZ.</doc>
</param>
<param style="plain" name="predefined" type="Boolean" optional="No" >
<doc>Set to True if the authentication policy is predefined and ships with the product. Set to False if the authentication policy is custom defined.</doc>
</param>
<param style="plain" name="enabled" type="Boolean" optional="No" >
<doc>True if the policy is enabled and invocable at runtime.  Set to false to disable the policy. If the policy is disabled it cannot be used by context based access.</doc>
</param>
<param style="plain" name="uri" type="String" optional="No" >
<doc>Unique identifier of the authentication policy. </doc>
</param>
</representation></response><response status="400">
<doc>Bad Request. There is a problem with the request. The JSON result describes the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="404">
<doc>Not Found. The requested service does not exist. The JSON message indicates which resource.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="500">
<doc>An internal error occurred. The JSON message indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response></method>
</resource>
</resources>
</application>
