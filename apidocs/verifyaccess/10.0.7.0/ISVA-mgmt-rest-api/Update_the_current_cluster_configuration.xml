<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Update the current cluster configuration</doc>
<resources base="">
<resource path="https://{appliance_hostname}/isam/cluster/v2">
<param type="path" name="appliance_hostname">
<doc>Host name of the appliance.</doc>
</param>
<method name="PUT" id="Update"><doc>   This web service will update the current cluster configuration information with the specified values.                    This will only update the values that are specified. Any existing values that are not specified will not be changed.  It is important to note that the primary and secondary masters cannot both be modified in the same commit operation. </doc>
<doc>   An initial configuration create must have been executed before this web service can be run. </doc>
<doc>   This web service can only be run on the primary master. This means that if the primary_master is being updated                    then this web service must be run on the new primary master.                    If you modify the primary master field the new primary master will push this policy out to all nodes in the cluster                    (including the old primary master). If a particular node is unreachable at this point in time it will not receive the new policy. </doc>
<doc>   There are two ways in which the new policy can be updated on the node:                    <ol type="1"><li>The primary master will attempt to push out the policy periodically (currently set for every 15 minutes).<br/>                    So, the policy will be automatically distributed within 15 minutes of the node becoming 'reachable' again;</li>                    <li>The node can be registered again using the Web service.</li></ol> </doc>
<request>
<doc>
 PUT https://{appliance_hostname}/isam/cluster/v2
 PUT_DATA: {
     "primary_master":"1.1.1.1",
     "secondary_master":"1.1.1.2",
     "master_ere":"1.1.1.3",
     "dsc_external_clients":"true",
     "dsc_port":"9000",
     "dsc_use_ssl":"false",
     "dsc_worker_threads":"30",
     "dsc_maximum_session_lifetime":"120",
     "dsc_client_grace_period":"30",
     "dsc_connection_idle_timeout":"10",
     "hvdb_embedded":false,
     "hvdb_db_type":"oracle",
     "hvdb_address":"192.168.93.110",
     "hvdb_port":"1521",
     "hvdb_user":"SYSTEM",
     "hvdb_password":"passw0rd",
     "hvdb_db_name":"ORCL",
     "hvdb_db_secure":"true",
     "hvdb_db_truststore": "oracle_keys",
     "hvdb_driver_type":"thin",
     "cfgdb_embedded": true,
     "first_port":"10000",
     "cfgdb_fs":"false",
     }
 </doc><doc>
 See the topic 'Create a new cluster configuration' for examples and explanation of external database configuration.
 </doc><param name="Authorization" style="header">
<doc>Basic Authentication header </doc></param>
<param name="Accept:application/json" style="header">
<doc>Required for requests to the service </doc></param>
<representation name="updateClusterJsonRequest" mediatype="application/json">
<param style="plain" name="primary_master" type="String" optional="No" >
<doc>The address (management interface) of the node that is acting as the primary master.</doc>
</param>
<param style="plain" name="secondary_master" type="String" optional="Yes" >
<doc>The address (management interface) of the node that is acting as the secondary master. This will be the node that will take over the clustering web services when the primary master becomes unavailable. This parameter is optional and can only be set if a primary master already exists.</doc>
</param>
<param style="plain" name="master_ere" type="String" optional="Yes" >
<doc>The address of a master external entity reference. The high availability controller uses this to determine if a server is down or if the network between servers has failed. The master ERE is used for communication between the primary and secondary masters and is required if both are set.</doc>
</param>
<param style="plain" name="tertiary_master" type="String" optional="Yes" >
<doc>The address (management interface) of the node that is acting as the tertiary master. This will be the node that will take over the clustering web services when the secondary master becomes unavailable. This parameter is required if a quaternary master is set and can only be set if the primary and secondary masters are set.</doc>
</param>
<param style="plain" name="quaternary_master" type="String" optional="Yes" >
<doc>The address (management interface) of the node that is acting as the quaternary master. This will be the node that will take over the clustering web services when the tertiary master becomes unavailable. This parameter is required if a tertiary master is set and can only be set if the primary and secondary masters are set.</doc>
</param>
<param style="plain" name="dsc_external_clients" type="Boolean" optional="No" >
<doc>A flag true/false indicating whether clients that are external to the cluster will need to use the DSC.</doc>
</param>
<param style="plain" name="dsc_port" type="Integer" optional="No" >
<doc>The port over which DSC communication will take place. This parameter is required if dsc_external_clients is set to true.</doc>
</param>
<param style="plain" name="dsc_use_ssl" type="Boolean" optional="No" >
<doc>A flag true/false indicating whether or not SSL should be used when communicating with the DSC. This parameter is required if dsc_external_clients is set to true. dsc_ssl_keyfile[String,Optional] The keyfile that will house the SSL certificates used by the DSC. This parameter is required if dsc_use_ssl is set to true.</doc>
</param>
<param style="plain" name="dsc_ssl_label" type="String" optional="Yes" >
<doc>The name of the SSL certificate that will be presented to clients. This parameter is optional and can only be set if dsc_ssl_keyfile is set.</doc>
</param>
<param style="plain" name="dsc_worker_threads" type="Integer" optional="No" >
<doc>The number of worker threads that will be used.</doc>
</param>
<param style="plain" name="dsc_maximum_session_lifetime" type="Integer" optional="No" >
<doc>The maximum lifetime of sessions within the DSC.</doc>
</param>
<param style="plain" name="dsc_client_grace_period" type="Integer" optional="No" >
<doc>When a client is shut down we give the client a grace period (in seconds) to restart and register an interest in a session again before we remove the session from the session cache. This will give the client a chance to restart without losing sessions from the server. The value specified here should be similar to the idle timeout value for the session.</doc>
</param>
<param style="plain" name="dsc_connection_idle_timeout" type="Integer" optional="No" >
<doc>The maximum length of time that a connection from a client can remain idle before it is closed by the server.  A value of 0 indicates that connections will not be reused. The default value is 0.</doc>
</param>
<param style="plain" name="hvdb_embedded" type="Boolean" optional="No" >
<doc>A flag true/false indicating whether or not the Runtime database (HVDB) is embedded (true) or external (false). If this value is true, the internal database will be used and none of the other hvdb_* values are required.</doc>
</param>
<param style="plain" name="hvdb_max_size" type="Integer" optional="Yes" >
<doc>The percentage of currently available disk space which can be used for the embedded Runtime database.  This option is only valid if hvdb_embedded is set to true.</doc>
</param>
<param style="plain" name="hvdb_db_type" type="String" optional="Yes" >
<doc>The type of database that is being used. Valid values are db2, postgresql and oracle. This option is only valid if hvdb_embedded is set to false.</doc>
</param>
<param style="plain" name="hvdb_address" type="String" optional="Yes" >
<doc>The IP or hostname of the external database server. This option is only valid if hvdb_embedded is set to false.</doc>
</param>
<param style="plain" name="hvdb_port" type="Integer" optional="Yes" >
<doc>The port on which the external database server is listening. This option is only valid if hvdb_embedded is set to false.</doc>
</param>
<param style="plain" name="hvdb_user" type="String" optional="Yes" >
<doc>The administrator name for the external database. This option is only valid if hvdb_embedded is set to false.</doc>
</param>
<param style="plain" name="hvdb_password" type="String" optional="Yes" >
<doc>The administrator password for the external database. This option is only valid if hvdb_embedded is set to false.</doc>
</param>
<param style="plain" name="hvdb_db2_alt_address" type="String" optional="Yes" >
<doc>The IP or hostname of the fail-over server in DB2 HADR/ACR environments. (Can be specified for DB2 only). This option is only valid if hvdb_embedded is set to false.</doc>
</param>
<param style="plain" name="hvdb_db2_alt_port" type="String" optional="Yes" >
<doc>The IP or hostname of the fail-over server in DB2 HADR/ACR environments. (Can be specified for DB2 only). This option is only valid if hvdb_embedded is set to false.</doc>
</param>
<param style="plain" name="hvdb_db_name" type="String" optional="Yes" >
<doc>The name of the external database (Required for DB2, PostgreSQL and Oracle). This option is only valid if hvdb_embedded is set to false.</doc>
</param>
<param style="plain" name="hvdb_db_secure" type="Boolean" optional="Yes" >
<doc>A flag true/false indicating whether or not the external database is secure. (Required for DB2, PostgreSQL and Oracle). This option is only valid if hvdb_embedded is set to false.</doc>
</param>
<param style="plain" name="hvdb_db_truststore" type="String" optional="No" >
<doc>The SSL Key Store which contains the trusted certificate of the Oracle DB requiring secure connectivity. (Required for Oracle only when hvdb_db_secure is true)</doc>
</param>
<param style="plain" name="hvdb_driver_type" type="String" optional="Yes" >
<doc>The type of Oracle JDBC driver to use. (Required for Oracle only). This option is only valid if hvdb_embedded is set to false.</doc>
</param>
<param style="plain" name="hvdb_failover_servers" type="FailoverServer" optional="Yes"  repeating="true">
<doc>An ordered list of PostgreSQL failover servers for the Runtime database. (Can be specified for PostgreSQL only).</doc>
</param>
<param style="plain" name="cfgdb_embedded" type="Boolean" optional="No" >
<doc>A flag true/false indicating whether or not the Configuration database is embedded (true) or external (false). If this value is not specified, the internal database will be used and none of the other cfgdb_* values are required.</doc>
</param>
<param style="plain" name="cfgdb_db_type" type="String" optional="Yes" >
<doc>The type of database that is being used. Valid values are db2, postgresql and oracle. This option is only valid if cfgdb_embedded is set to false.</doc>
</param>
<param style="plain" name="cfgdb_address" type="String" optional="Yes" >
<doc>The IP or hostname of the external database server. This option is only valid if cfgdb_embedded is set to false.</doc>
</param>
<param style="plain" name="cfgdb_port" type="Integer" optional="Yes" >
<doc>The port on which the external database server is listening. This option is only valid if cfgdb_embedded is set to false.</doc>
</param>
<param style="plain" name="cfgdb_user" type="String" optional="Yes" >
<doc>The administrator name for the external database. This option is only valid if cfgdb_embedded is set to false.</doc>
</param>
<param style="plain" name="cfgdb_password" type="String" optional="Yes" >
<doc>The administrator password for the external database. This option is only valid if cfgdb_embedded is set to false.</doc>
</param>
<param style="plain" name="cfgdb_db2_alt_address" type="String" optional="Yes" >
<doc>The IP or hostname of the fail-over server in DB2 HADR/ACR environments. (Can be specified for DB2 only). This option is only valid if cfgdb_embedded is set to false.</doc>
</param>
<param style="plain" name="cfgdb_db2_alt_port" type="String" optional="Yes" >
<doc>The IP or hostname of the fail-over server in DB2 HADR/ACR environments. (Can be specified for DB2 only). This option is only valid if cfgdb_embedded is set to false.</doc>
</param>
<param style="plain" name="cfgdb_db_name" type="String" optional="Yes" >
<doc>The name of the external database (Required for DB2, PostgreSQL and Oracle). This option is only valid if cfgdb_embedded is set to false.</doc>
</param>
<param style="plain" name="cfgdb_db_secure" type="Boolean" optional="Yes" >
<doc>A flag true/false indicating whether or not the external database is secure. (Required for DB2, PostgreSQL and Oracle). This option is only valid if cfgdb_embedded is set to false.</doc>
</param>
<param style="plain" name="cfgdb_db_truststore" type="String" optional="Yes" >
<doc>The SSL Key Store which contains the trusted certificate of the Oracle DB requiring secure connectivity. (Required for Oracle only when cfgdb_db_secure is true)</doc>
</param>
<param style="plain" name="cfgdb_driver_type" type="String" optional="Yes" >
<doc>The type of Oracle JDBC driver to use. (Required for Oracle only). This option is only valid if cfgdb_embedded is set to false.</doc>
</param>
<param style="plain" name="cfgdb_failover_servers" type="FailoverServer" optional="Yes"  repeating="true">
<doc>An ordered list of PostgreSQL failover servers for the Configuration database. (Can be specified for PostgreSQL only).</doc>
</param>
<param style="plain" name="first_port" type="Integer" optional="No" >
<doc>A port number that is the first in a range of 30 ports that will be reserved for use by the cluster web services.</doc>
</param>
<param style="plain" name="cfgdb_fs" type="Boolean" optional="Yes" >
<doc>A flag true/false indicating whether to use the external Configuration database as an alternate method to share internal files among the cluster.  Using this method enables many configuration items to be changed on a non-Primary node when the Primary node is offline. </doc>
</param>
</representation><representation name="FailoverServer" mediatype="application/json">
<param style="plain" name="address" type="String" optional="No" >
<doc>The IP addess or hostname of the failover server.</doc>
</param>
<param style="plain" name="port" type="Integer" optional="No" >
<doc>The port of the failover server.</doc>
</param>
<param style="plain" name="order" type="Integer" optional="No" >
<doc>The order of the failover server. This will be used to indicate the order in which the array of failover servers will be configured in the JDBC settings. </doc>
</param>
</representation></request>
<response status="204">
<doc>The request was successful.</doc>
<doc>
 204 No Content
 Content-Type:application/json
 </doc><param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
</response><response status="200">
<doc>OK, The request was successful.</doc>
<doc>
 200 OK
 Content-Type:application/json
 {
     "warning":"The runtime database server cannot be contacted with the specified username and password."
 }
</doc><param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
</response><response status="400">
<doc>There is a problem with the request. The JSON message describes the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="message" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="404">
<doc>File not Found, The requested service does not exist. The JSON message indicates which resource.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="message" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="500">
<doc>An internal error occurred. The JSON message indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="message" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response></method>
</resource>
</resources>
</application>
