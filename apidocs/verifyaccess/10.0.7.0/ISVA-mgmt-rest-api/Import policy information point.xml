<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Import policy information point</doc>
<resources base="">
<resource path="https://{appliance_hostname}/iam/access/v8/pips/{pip_id}/file">
<param type="path" name="appliance_hostname">
<doc>Host name of the appliance.</doc>
</param>
<param type="path" name="pip_id">
<doc>The system-assigned policy information point ID value.</doc>
</param>
<method name="POST" id="Import policy information point file contents"><doc>   To import the contents of a file to replace the script of a JavaScript                    policy information point,   				  	 issue an HTTP POST command on the PIPs file resource URI. This API is   					 valid if the policy information point has a 'javascript.code' or 'fileContent'                     property.  </doc>
<doc>   The JavaScript content of the imported file is validated and syntax errors are                     reported. The contents will be assigned as the value of the 'javascrpt.code' or                    'fileContent' property of the policy information point.  </doc>
<doc>   Note: For the change to take effect, it must be deployed as                           described in the Configuration changes commit process. </doc>
<request>
<doc>
 POST https://{appliance_hostname}/iam/access/v8/pips/101/file
 
 POST_DATA: {
 "file":"The file"  (as application/file)
 }
 
 </doc><doc>
 To determine the pip_id value of the policy information point to be updated, issue an HTTP GET command on the
 PIPs resource URI:  https://{appliance_hostname}/iam/access/v8/pips/.
 </doc><param name="Authorization: Basic" style="header">
<doc>Basic authentication header. </doc></param>
<param name="Content-type:multipart/form-data" style="header">
<doc>Media type sent. </doc></param>
<param name="Accept:application/json,text/html,application/*" style="header">
<doc>Required for requests. </doc></param>
<representation name="importFile" mediatype="application/json">
<param style="plain" name="file" type="String" optional="No" >
<doc>The file to import. </doc>
</param>
</representation></request>
<response status="200">
<doc>OK. The request was successfully submitted.  See response body for more information.</doc>
<doc>
 Successful import:
 
 200 OK
 &lt;html&gt;&lt;body&gt;&lt;textarea&gt;{"headers":{},"body":"","status":204}
 &lt;/textarea&gt;&lt;/body&gt;&lt;/html&gt;
 
 Imported file did not pass JavaScript validation:
 
 200 OK
 &lt;html&gt;&lt;body&gt;&lt;textarea&gt;{"headers":{"Content-Language":"en",
 "Content-Type":"application/json"},"body":"{"result":"FBTRBA0146E 
 The JavaScript mapping rule that you submitted is not valid. The 
 JavaScript validator reported a syntax error at line 5 and column 6 
 with the message: Unexpected end of file."}","status":400}&lt;/textarea&gt;
 &lt;/body&gt;&lt;/html&gt;	 
 
 </doc><param name="Content-Type:text/html" style="header">
<doc>Response is an HTML document with TEXTAREA tag containing a JSON payload. </doc></param>
<representation name="importTextResponse" mediatype="application/json">
<param style="plain" name="headers" type="String" optional="No" >
<doc>An empty object, {}, indicates success. Otherwise, contains a JSON object representing the HTTP headers for the response.</doc>
</param>
<param style="plain" name="body" type="JsonResponse" optional="No" >
<doc>An empty string, "", indicates success and no message is returned. Otherwise, contains a JSON response object with result specifying the message associated with the status code.</doc>
</param>
<param style="plain" name="status" type="Integer" optional="No" >
<doc>HTTP status code identifying the result of the operation. Status of '204' indicates success. </doc>
</param>
</representation><representation name="JsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The message associated with the status code. </doc>
</param>
</representation></response><response status="500">
<doc>An internal error occurred. The JSON message indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="400">
<doc>Bad Request. There is a problem with the request. The JSON result describes the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="404">
<doc>Not Found. The requested service does not exist. The JSON message indicates which resource.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response></method>
</resource>
</resources>
</application>
