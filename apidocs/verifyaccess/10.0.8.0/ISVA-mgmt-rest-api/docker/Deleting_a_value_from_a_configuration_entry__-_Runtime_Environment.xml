<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Deleting a value from a configuration entry  - Runtime Environment</doc>
<resources base="">
<resource path="https://{appliance_hostname}/isam/runtime/{resource_id}/configuration/stanza/{stanza_id}/entry_name/{entry_id}/value/{value_id}">
<param type="path" name="appliance_hostname">
<doc>Host name of the appliance.</doc>
</param>
<param type="path" name="resource_id">
<doc>Name of the configuration file to export. For example, ldap.conf, pd.conf, instance.conf</doc>
</param>
<param type="path" name="stanza_id">
<doc>The name of the resource stanza entry. For example, "server". Note: This name cannot contain the string "/entry_name" unless it is the start of the stanza name. ie "/entry_name/name" is valid but "/name/entry_name" is not.</doc>
</param>
<param type="path" name="entry_id">
<doc>The name of the configuration entry. For example, https. Note: This name cannot contain the string "/value" unless it is the start of the entry name. ie "/value/name" is valid but "/name/value" is not.</doc>
</param>
<param type="path" name="value_id">
<doc>The value of the configuration entry. This field is optional and if it is not specified, all configuration entries with the matching stanza_id and entry_id are deleted.</doc>
</param>
<method name="DELETE" id="Delete a configuration entry value"><doc>     To delete a configuration entry with the RESTful web service, issue an HTTP DELETE command on the configuration entry management URI. </doc>
<request>
<doc>
 DELETE https://{appliance_hostname}/isam/runtime/{resource_id}/configuration/stanza/{stanza_id}/entry_name/{entry_id}/value/{value_id}
 </doc><param name="Authorization" style="header">
<doc>Basic Authentication header </doc></param>
<param name="Accept:application/json" style="header">
<doc>Required for requests to the service </doc></param>
</request>
<response status="400">
<doc>There is a problem with the request. The JSON message describes the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="message" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="404">
<doc>File not Found, The requested service does not exist. The JSON message indicates which resource.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="message" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="500">
<doc>An internal error occurred. The JSON message indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="message" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="200">
<doc>OK, The request was successful.</doc>
<doc>
 200 ok
 
 Note: For the changes to take effect, they must be deployed as described in Configuration changes commit process.
 </doc><param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
</response></method>
</resource>
</resources>
</application>
