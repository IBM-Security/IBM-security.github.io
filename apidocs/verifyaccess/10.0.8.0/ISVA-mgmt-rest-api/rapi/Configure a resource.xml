<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Configure a resource</doc>
<resources base="">
<resource path="https://{appliance_hostname}/iam/access/v8/policyattachments/">
<param type="path" name="appliance_hostname">
<doc>Host name of the appliance.</doc>
</param>
<method name="POST" id="Configure a resource"><doc>   To configure a resource for policy attachment,  					 issue an HTTP POST command on the policy attachments resource URI. </doc>
<doc>   Resources must be configured in order to have policies attached to them.  This process                    is dependent on prior installation and configuration of an IBM Security Verify Access                    for Web runtime component and reverse proxy server. Through this configuration, protected                    objects are defined and therefore can be identified and configured for policy attachment. </doc>
<request>
<doc>
 Configure a resource.  Do not specify the policy attachments here,
 but plan to update the attachments for this resource afterwards.

 POST https://{appliance_hostname}/iam/access/v8/policyattachments/

 POST_DATA: {
 "server":"myServer-DTest1",
 "resourceUri":"/hr/benefits/44z59.html",
 "policies":[],
 "cache":-1
 }

 Configure a resource, specifying to attach policy with ID 1 and
 policy set with ID 2 to the resource.
 POST https://{appliance_hostname}/iam/access/v8/policyattachments/

 POST_DATA: {
 "server":"myServer-DTest1",
 "resourceUri":"/hr/benefits/55q38.html",
 "policies":[{"id":"1",
              "type":"policy"},
             {"id":"3",
             "type":"policyset"}],
 "policyCombiningAlgorithm":"permitOverrides"
 }

 Note:  To determine the policy ID values to use, issue an HTTP GET
        command on the policies resource URI:
        https://{appliance_hostname}/iam/access/v8/policies/.
        To determine the policy set ID values to use, issue an HTTP GET
        command on the policy sets URI:
        https://{appliance_hostname}/iam/access/v8/policysets/.

 </doc><param name="Authorization: Basic" style="header">
<doc>Basic authentication header. </doc></param>
<param name="Accept:application/json" style="header">
<doc>Required for requests to the service. </doc></param>
<representation name="resourceConfigureJsonRequest" mediatype="application/json">
<param style="plain" name="server" type="String" optional="No" >
<doc>The web container that contains the protected object space for a server instance.</doc>
</param>
<param style="plain" name="resourceUri" type="String" optional="No" >
<doc>The resource URI of the resource in the protected object space.</doc>
</param>
<param style="plain" name="policies" type="attachment" optional="No"  repeating="true">
<doc>Array of attachments (policy, policy sets, and API protection definitions) that define the access protection for this resource.  In order to define the policy attachments for this resource at a later time, an empty array ([]) can be specified.</doc>
</param>
<param style="plain" name="policyCombiningAlgorithm" type="String" optional="Yes" >
<doc>"permitOverrides" to allow access to the rescource if any of the attachments return permit; "denyOverrides" to deny access to the resource if any of the attachments return deny. Default is "denyOverrides".</doc>
</param>
<param style="plain" name="cache" type="Integer" optional="Yes" >
<doc>0 to disable the cache for this resource, -1 to cache the decision for the lifetime of the session or any number greater than 1 to set a specific timeout (in seconds) for the cached decision. If not specified a default of 0 will be used. </doc>
</param>
</representation><representation name="attachment" mediatype="application/json">
<param style="plain" name="id" type="String" optional="No" >
<doc>Internally assigned ID value of the policy, policy set, or API protection definition to be attached to the resource.</doc>
</param>
<param style="plain" name="type" type="String" optional="No" >
<doc>The type of attachment.  Values include 'policy', 'policyset', or 'definition'. </doc>
</param>
</representation></request>
<response status="201">
<doc>Created. A new resource was created. The request was successful.</doc>
<doc>201 Created</doc><param name="Location: https://{appliance_hostname}/iam/access/v8/{object}/{id}" style="header">
<doc>URI to newly created object. </doc></param>
</response><response status="400">
<doc>Bad Request. There is a problem with the request. The JSON result describes the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="404">
<doc>Not Found. The requested service does not exist. The JSON message indicates which resource.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="409">
<doc>Conflict. The JSON result indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="500">
<doc>An internal error occurred. The JSON message indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response></method>
</resource>
</resources>
</application>
