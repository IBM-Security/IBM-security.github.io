<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Update a list of configuration properties</doc>
<resources base="">
<resource path="https://{appliance_hostname}/iam/access/v8/override-configs/">
<param type="path" name="appliance_hostname">
<doc>Host name of the appliance.</doc>
</param>
<method name="PUT" id="Update a list of configuration properties"><doc>   To update a list of configuration properties, issue an HTTP PUT command on the                        override-configs resource URI specifying a JSON array of configuration property                    IDs to be updated, along with their new values. </doc>
<doc>   Note: For the changes to take effect, they must be deployed as                           described in the Configuration changes commit process. </doc>
<request>
<doc>
 Update the configuration properties associated with Email One-time
 password.  The properties are otp.email.senderEmail - 10401, 
                               otp.email.smtpHostname - 10402,
                               otp.email.smtpUsername - 10403,
                               otp.email.smtpPassword - 10404
 
 PUT https://{appliance_hostname}/iam/access/v8/override-configs/
 
 PUT_DATA: {
 [
 {"id":10401,"sensitive":false,"value":"admin@localhost"},
 {"id":10402,"sensitive":false,"value":"localhost"},
 {"id":10403,"sensitive":false,"value":"administrator4"},
 {"id":10404,"sensitive":true,"value":"t4333fz"}
 ]
 }
 
 </doc><doc>
 To determine the property_id values of the configuration properties to be updated, issue an HTTP GET command on the
 override-configs resource URI:  https://{appliance_hostname}/iam/access/v8/override-configs/.
 </doc><param name="Authorization: Basic" style="header">
<doc>Basic authentication header. </doc></param>
<param name="Accept:application/json" style="header">
<doc>Required for requests to the service. </doc></param>
<representation name="configOverMultiJsonRequest" mediatype="application/json">
<doc>Note: Request body is an array.</doc><param style="plain" name="id" type="String" optional="No" >
<doc>Internally assigned ID value of the configuration property to be updated.</doc>
</param>
<param style="plain" name="sensitive" type="Boolean" optional="No" >
<doc>Used internally to indicate properties with values private in nature, such as passwords.</doc>
</param>
<param style="plain" name="value" type="String" optional="No" >
<doc>The value for the property represented as a string.  The value may be null. </doc>
</param>
</representation></request>
<response status="204">
<doc>No content returned.  The request was successful.</doc>
<doc>204 NO CONTENT</doc></response><response status="400">
<doc>Bad Request. There is a problem with the request. The JSON result describes the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="404">
<doc>Not Found. The requested service does not exist. The JSON message indicates which resource.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="500">
<doc>An internal error occurred. The JSON message indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response></method>
</resource>
</resources>
</application>
