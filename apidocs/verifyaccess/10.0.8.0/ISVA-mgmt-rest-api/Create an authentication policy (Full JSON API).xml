<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Create an authentication policy (Full JSON API)</doc>
<resources base="">
<resource path="https://{appliance_hostname}/iam/access/v8/authentication/policies/json">
<param type="path" name="appliance_hostname">
<doc>Host name of the appliance.</doc>
</param>
<method name="POST" id="Create an authentication policy (Full JSON API)"><doc>   Policy creation is now supported using both the Policy Editor on the appliance local                    management interface (LMI) and this JSON specific API by defining the policy as a JSON object. </doc>
<request>
<doc>

 POST https://{other_appliance_hostname}/iam/access/v8/authentication/policies/json

 POST_DATA:
 {
   "description":"My Policy",
   "name":"MyPolicy",
   "uri":"urn:ibm:security:authentication:asf:policy1",
   "policy": [
       {
           "step": {
               "mechanism": {
                   "id": "urn:ibm:security:authentication:asf:mechanism:password"
               }
           }
       }
   ],
   "enabled":true
 }

</doc><doc>
 All authentication mechanisms referred to within the policy must already exist on the appliance.  A list
 of authentication mechanisms configured on the appliance issuing an HTTP GET request to the authentication
 mechanism resource URI: GET https://{appliance_hostname}/iam/access/v8/authentication/mechanisms
 </doc><param name="Authorization: Basic" style="header">
<doc>Basic authentication header. </doc></param>
<param name="Accept:application/json" style="header">
<doc>Required for requests to the service. </doc></param>
<representation name="jsonAuthPolicyCreateJsonRequest" mediatype="application/json">
<param style="plain" name="name" type="String" optional="No" >
<doc>Specify a unique name for the authentication policy.</doc>
</param>
<param style="plain" name="policy" type="jsonAuthPolicy" optional="No"  repeating="true">
<doc>Configured policy content represented as an array of objects which contain either policy steps, or policy decisions, in order of execution.</doc>
</param>
<param style="plain" name="uri" type="String" optional="No" >
<doc>Specify a unique identifier for the authentication policy.</doc>
</param>
<param style="plain" name="description" type="String" optional="Yes" >
<doc>Description of the authentication policy.</doc>
</param>
<param style="plain" name="dialect" type="String" optional="Yes" >
<doc>Authentication policy specification used to format the authentication policy. The only valid value is "urn:ibm:security:authentication:policy:1.0:schema".</doc>
</param>
<param style="plain" name="enabled" type="Boolean" optional="No" >
<doc>True if the policy is enabled and invocable at runtime.  Set to false to disable the policy. If the policy is disabled it cannot be used by context based access. </doc>
</param>
</representation><representation name="jsonAuthPolicy" mediatype="application/json">
<param style="plain" name="step" type="jsonAuthPolicyStep" optional="Yes" >
<doc>The policy step which describes a single mechanism to be executed at runtime.</doc>
</param>
<param style="plain" name="decision" type="jsonAuthPolicyDecision" optional="Yes" >
<doc>The policy decision which describes an entire decision flow to be executed at runtime. </doc>
</param>
</representation><representation name="jsonAuthPolicyStep" mediatype="application/json">
<param style="plain" name="mechanism" type="jsonAuthPolicyMechanism" optional="No" >
<doc>The authentication mechanism object. </doc>
</param>
</representation><representation name="jsonAuthPolicyDecision" mediatype="application/json">
<param style="plain" name="name" type="String" optional="No" >
<doc>The name of the decision.</doc>
</param>
<param style="plain" name="rule" type="String" optional="No" >
<doc>The Javascript mapping rule to be executed at policy runtime for this decision.</doc>
</param>
<param style="plain" name="template" type="String" optional="Yes" >
<doc>The template page to be rendered by a browser at policy runtime for this decision.</doc>
</param>
<param style="plain" name="returnEnabled" type="Boolean" optional="No" >
<doc>A boolean to indicate whether a branch is able to return to the decision during policy runtime.</doc>
</param>
<param style="plain" name="branches" type="jsonAuthPolicyBranches" optional="No"  repeating="true">
<doc>The branches within this decision. </doc>
</param>
</representation><representation name="jsonAuthPolicyMechanism" mediatype="application/json">
<param style="plain" name="id" type="String" optional="No" >
<doc>Unique identifier of the authentication mechanism.</doc>
</param>
<param style="plain" name="parameters" type="jsonAuthPolicyMechanismParameters" optional="Yes"  repeating="true">
<doc>The parameters for this authentication mechanism. </doc>
</param>
</representation><representation name="jsonAuthPolicyBranches" mediatype="application/json">
<param style="plain" name="name" type="String" optional="No" >
<doc>The name of the branch.</doc>
</param>
<param style="plain" name="steps" type="jsonAuthPolicyStep" optional="No"  repeating="true">
<doc>Array of steps within this branch. </doc>
</param>
</representation><representation name="jsonAuthPolicyMechanismParameters" mediatype="application/json">
<param style="plain" name="id" type="String" optional="No" >
<doc>Identifier for the mechanism parameter.</doc>
</param>
<param style="plain" name="source" type="String" optional="No" >
<doc>The source to be used for the mechanism parameter. Can be "value", "session", or "request".</doc>
</param>
<param style="plain" name="value" type="String" optional="No" >
<doc>The value of the mechanism parameter.</doc>
</param>
<param style="plain" name="namespace" type="String" optional="Yes" >
<doc>The namespace from which to retrieve the value for this mechanism parameter if "source" is "session" or "request". </doc>
</param>
</representation></request>
<response status="204">
<doc>No content returned.  The request was successful.</doc>
</response><response status="400">
<doc>Bad Request. There is a problem with the request. The JSON result describes the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="404">
<doc>Not Found. The requested service does not exist. The JSON message indicates which resource.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="409">
<doc>Conflict. The JSON result indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="500">
<doc>An internal error occurred. The JSON message indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response></method>
</resource>
</resources>
</application>
