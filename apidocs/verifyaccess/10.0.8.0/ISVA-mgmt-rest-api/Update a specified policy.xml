<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Update a specified policy</doc>
<resources base="">
<resource path="https://{appliance_hostname}/iam/access/v8/policies/{policy_id}">
<param type="path" name="appliance_hostname">
<doc>Host name of the appliance.</doc>
</param>
<param type="path" name="policy_id">
<doc>The system-assigned policy ID value.</doc>
</param>
<method name="PUT" id="Update a specified policy"><doc>   To update the settings of an existing policy, issue an HTTP PUT command on the   					 policies resource URI specifying the ID of the policy to be updated.  </doc>
<doc>   Do NOT use this command to update the policy XACML.  Only modifications                    made to the XACML using the Policy Editor on the appliance                    local management interface (LMI) are supported. </doc>
<doc>   This command does require the policy XACML to be submitted as one of                    payload elements.  Issue an HTTP GET command on the policies                     resource URI, specifying the policy ID of the policy to be                     updated, and make a copy the response payload.  Update the items                     as needed, except for the 'policy' element which contains the                     XACML.  Then, use the updated payload as the data for the                     PUT command. This way, inadvertent modifications to the XACML can                    be avoided.                                    </doc>
<request>
<doc>
 Update the description for policy myLocationPolicy, ID 12:
 
 1) Get the payload of myLocationPolicy, with policy ID value 12,
 by issuing a GET command on the policies resource URI:
 
 GET https://{appliance_hostname}/iam/access/v8/policies/12
 
 Response:
 200 OK
 {
 "id":"12",
 "dialect":"urn:oasis:names:tc:xacml:2.0:policy:schema:os",
 "description":"At work location policy.",
 "userlastmodified":"admin",
 "attributesrequired":false,
 "name":"myLocationPolicy",
 "lastmodified":"2014-01-18T10:28:01Z",
 "policy":
 "&lt;?xml version=&#92;"1.0&#92;" encoding=&#92;"UTF-8&#92;"?&gt;&lt;!-- PolicyTag=urn:ibm:
  security:isam:8.0:xacml:2.0:config-policy --&gt;&lt;!-- PolicyName='myL
  ocationPolicy' --&gt;&lt;PolicySet xmlns=&#92;"urn:oasis:names:tc:xacml:2.0
  .......... 
  e=&#92;"http:&#92;/&#92;/www.w3.org&#92;/2001&#92;/XMLSchema#integer&#92;"&gt;10&lt;&#92;/AttributeValue
  &gt;&lt;&#92;/Apply&gt;&lt;&#92;/Apply&gt;&lt;&#92;/Apply&gt;&lt;&#92;/Condition&gt;&lt;&#92;/Rule&gt;&lt;&#92;/Policy&gt;&lt;&#92;/PolicySet&gt;"
 "datecreated":"2014-01-18T10:28:01Z",
 "predefined":false
 }
 
 2) Copy the response and use it as the PUT_DATA in the PUT command. Make the 
 necessary modification to the 'description' element.  Fields submitted
 in the payload that are not required by the PUT action will be ignored during
 processing.
 
 PUT https://{other_appliance_hostname}/iam/access/v8/policies/
 
 PUT_DATA: {
 "id":"12",
 "dialect":"urn:oasis:names:tc:xacml:2.0:policy:schema:os",
 "description":"At New York, Keller office.",
 "userlastmodified":"admin",
 "attributesrequired":false,
 "name":"myLocationPolicy",
 "lastmodified":"2014-01-18T10:28:01Z",
 "policy":
 "&lt;?xml version=&#92;"1.0&#92;" encoding=&#92;"UTF-8&#92;"?&gt;&lt;!-- PolicyTag=urn:ibm:
  security:isam:8.0:xacml:2.0:config-policy --&gt;&lt;!-- PolicyName='myL
  ocationPolicy' --&gt;&lt;PolicySet xmlns=&#92;"urn:oasis:names:tc:xacml:2.0
  .......... 
  e=&#92;"http:&#92;/&#92;/www.w3.org&#92;/2001&#92;/XMLSchema#integer&#92;"&gt;10&lt;&#92;/AttributeValue
  &gt;&lt;&#92;/Apply&gt;&lt;&#92;/Apply&gt;&lt;&#92;/Apply&gt;&lt;&#92;/Condition&gt;&lt;&#92;/Rule&gt;&lt;&#92;/Policy&gt;&lt;&#92;/PolicySet&gt;"
 "datecreated":"2014-01-18T10:28:01Z",
 "predefined":false
 }
 
 </doc><doc>
 To determine the policy_id value of the policy to be updated, issue an HTTP GET command on the
 policies resource URI:  https://{appliance_hostname}/iam/access/v8/policies/.
 </doc><param name="Authorization: Basic" style="header">
<doc>Basic authentication header. </doc></param>
<param name="Accept:application/json" style="header">
<doc>Required for requests to the service. </doc></param>
<representation name="policyJsonRequest" mediatype="application/json">
<param style="plain" name="dialect" type="String" optional="No" >
<doc>The XACML specification used within the policy. Only valid value is XACML Version 2, "urn:oasis:names:tc:xacml:2.0:policy:schema:os".</doc>
</param>
<param style="plain" name="description" type="String" optional="Yes" >
<doc>A description of the policy.  If omitted, the description is set to "".</doc>
</param>
<param style="plain" name="attributesrequired" type="Boolean" optional="No" >
<doc>True if the values for any attributes specified in the policy must be present in the incoming request.  False if the attribute values may optionally be present.</doc>
</param>
<param style="plain" name="name" type="String" optional="No" >
<doc>The name of the policy.</doc>
</param>
<param style="plain" name="policy" type="String" optional="No" >
<doc>The configured policy in XACML 2.0.  This is an escaped character string that must come directly from the response of an HTTP GET command for an existing policy which was created using the Policy Editor on the appliance LMI.</doc>
</param>
<param style="plain" name="predefined" type="Boolean" optional="No" >
<doc>False to indicate the policy is custom defined. </doc>
</param>
</representation></request>
<response status="204">
<doc>No content returned.  The request was successful.</doc>
<doc>204 NO CONTENT</doc></response><response status="400">
<doc>Bad Request. There is a problem with the request. The JSON result describes the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="404">
<doc>Not Found. The requested service does not exist. The JSON message indicates which resource.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="409">
<doc>Conflict. The JSON result indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="500">
<doc>An internal error occurred. The JSON message indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response></method>
</resource>
</resources>
</application>
