<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Importing a signer certificate into a certificate database</doc>
<resources base="">
<resource path="https://{appliance_hostname}/isam/ssl_certificates/{kdb_id}/signer_cert">
<param type="path" name="appliance_hostname">
<doc>Host name of the appliance.</doc>
</param>
<param type="path" name="kdb_id">
<doc>Name of the certificate database.</doc>
</param>
<method name="POST" id="Importing a signer certificate into a certificate database"><doc>     To complete this operation with the RESTful web service, issue an HTTP POST command on the SSL Certificates signer certificate resource URI.  </doc>
<request>
<doc>
 POST https://{appliance_hostname}/isam/ssl_certificates/{kdb_id}/signer_cert
 Content-Type: multipart/form-data
 
 POST_DATA: {
   "label":"webseal.ibm.com",
   "cert": "The certificate to import" &#x28;as string or file&#x29;
 }
 
 For examaple, to import a signer certificate using curl:

 curl https://10.0.8.23/isam/ssl_certificates/test/signer_cert
   -u admin:admin -H "Accept: application/json"
   --form cert=@test.ibm.com.p12
   --form label=test.ibm.com
 </doc><param name="Authorization" style="header">
<doc>Basic Authentication header </doc></param>
<param name="Accept:application/json" style="header">
<doc>Required for requests to the service </doc></param>
<param name="Content-Type:multipart/form-data" style="header">
<doc>Required to post the imported files. </doc></param>
<representation name="importSignerCertJsonRequest" mediatype="application/json">
<param style="plain" name="label" type="String" optional="No" >
<doc>The new signer certificate label. A name that identifies the signer certificate. There can be many signer certificates in a certificate database so this name must be unique.</doc>
</param>
<param style="plain" name="cert" type="String" optional="No" >
<doc>The signer certificate to be imported. This value can be either a string or a file. </doc>
</param>
</representation></request>
<response status="200">
<doc>OK, The request was successful.</doc>
<doc>
 200 ok
 
 Note: For the changes to take effect, they must be deployed as described in Configuration changes commit process.
 </doc><param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
</response><response status="400">
<doc>There is a problem with the request. The JSON message describes the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="message" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="404">
<doc>File not Found, The requested service does not exist. The JSON message indicates which resource.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="message" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="500">
<doc>An internal error occurred. The JSON message indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="message" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response></method>
</resource>
</resources>
</application>
