<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Create a policy set</doc>
<resources base="">
<resource path="https://{appliance_hostname}/iam/access/v8/policysets/">
<param type="path" name="appliance_hostname">
<doc>Host name of the appliance.</doc>
</param>
<method name="POST" id="Create a policy set"><doc>   To create a policy set, issue an HTTP POST command on the   					 policy sets resource URI. </doc>
<request>
<doc>
 POST https://{appliance_hostname}/iam/access/v8/policysets/
 
 POST_DATA: {
 "name":"locationPolicySet",
 "description":"Group of location policies allowed.",
 "predefined":false,
 "policyCombiningAlgorithm":"firstApplicable"
 }
  
 </doc><param name="Authorization: Basic" style="header">
<doc>Basic authentication header. </doc></param>
<param name="Accept:application/json" style="header">
<doc>Required for requests to the service. </doc></param>
<representation name="policySetJsonRequestCreate" mediatype="application/json">
<param style="plain" name="name" type="String" optional="No" >
<doc>A unique name for the policy set.</doc>
</param>
<param style="plain" name="description" type="String" optional="Yes" >
<doc>A description of the policy set.  If omitted, the description is set to null.</doc>
</param>
<param style="plain" name="predefined" type="Boolean" optional="No" >
<doc>False to indicate the policy set is custom defined.</doc>
</param>
<param style="plain" name="policies" type="String" optional="Yes"  repeating="true">
<doc>An array of policy IDs which belong to this policy set.  The order that the policies appear in this list is used when the policyCombiningAlgorithm is set to "firstApplicable".</doc>
</param>
<param style="plain" name="policyCombiningAlgorithm" type="String" optional="Yes" >
<doc>Defines the combined action for the policies in the set.  "firstApplicable" to indicate that the policy set will return the result of the first policy in the set that returns permit or deny, "denyOverrides" to indicate that the policy set should deny access if any policy in the set returns a response of deny , or "permitOverrides" to indicate that the policy set should permit access if any policy in the set returns a response of permit. Default is "denyOverrides". </doc>
</param>
</representation></request>
<response status="201">
<doc>Created. A new resource was created. The request was successful.</doc>
<doc>201 Created</doc><param name="Location: https://{appliance_hostname}/iam/access/v8/{object}/{id}" style="header">
<doc>URI to newly created object. </doc></param>
</response><response status="400">
<doc>Bad Request. There is a problem with the request. The JSON result describes the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="404">
<doc>Not Found. The requested service does not exist. The JSON message indicates which resource.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="409">
<doc>Conflict. The JSON result indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="500">
<doc>An internal error occurred. The JSON message indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response></method>
</resource>
</resources>
</application>
