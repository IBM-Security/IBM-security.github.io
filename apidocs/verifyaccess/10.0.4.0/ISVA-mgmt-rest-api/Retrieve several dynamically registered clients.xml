<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Retrieve several dynamically registered clients</doc>
<resources base="">
<resource path="https://{appliance_hostname}/iam/access/v8/dynamic_clients/">
<param type="path" name="appliance_hostname">
<doc>Host name of the appliance.</doc>
</param>
<param type="query" name="sortBy">
<doc>(Optional) The response field name that the returned data is sorted by. Precede the field name with a plus sign (+) for ascending order and a minus sign (-) for descending order.  Separate multiple field names by a comma. For example&#58; sortBy=+fieldA or sortBy=-fieldB</doc>
</param>
<param type="query" name="count">
<doc>(Optional) The number of records to return.</doc>
</param>
<param type="query" name="start">
<doc>(Optional) The record index from which to start returns. If specified, also define the count query parameter. Default is 0.</doc>
</param>
<param type="query" name="filter">
<doc>(Optional) One or more filter-statements, where filter-statement consists of &lt;name&gt;, &lt;operator&gt;, or &lt;expression&gt;. The &lt;name&gt; is the field name to apply the filter to. The &lt;operator&gt; is one of the following comparator operators&#58; equals, gt, ge, lt, le, notequal, startswith, endswith, contains, or containsignorecase. The &lt;expression&gt; indicates the value to be included in the results. Multiple filter-statements can be combined with ' and '. The filter must be URL-safe encoded. For example&#58; filter=fieldA%20contains%20scr%20and%20fieldB%20gt%205.</doc>
</param>
<method name="GET" id="Retrieve several dynamically registered clients"><doc>   To retrieve information on several dynamic client registration, issue an HTTP                       GET command on the dynamic clients resource URI. </doc>
<request>
<doc>
 GET https://{appliance_hostname}/iam/access/v8/dynamic_clients/?filter=owner%20equals%20testuser
 </doc><param name="Authorization: Basic" style="header">
<doc>Basic authentication header. </doc></param>
<param name="Accept:application/json" style="header">
<doc>Required for requests to the service. </doc></param>
</request>
<response status="200">
<doc>OK. The request was successful.</doc>
<doc>
 200 OK

 [{
  "owner": "testuser",
  "clientId": "SRsznOxZ5PBYaNtqn8wo",
  "data": {
    "company_name": "ORG",
    "registration_client_uri": "https://myidp.ibm.com/mga/sps/oauth/oauth20/register/testDef?client_id=SRsznOxZ5PBYaNtqn8wo",
    "tos_uri": "https://org.com",
    "redirect_uris": [
      "https://org.com/redirect"
    ],
    "client_id_issued_at": 1521162560,
    "client_secret": "BgVIdbjfLckIsa2V8XuW"
  },
  "definitionId": 1
},
{
  "owner": "adminUser",
  "clientId": "1zsaj4fau3e3",
  "data": {
    "company_name": "ADMINORG",
    "registration_client_uri": "https://myidp.ibm.com/mga/sps/oauth/oauth20/register/testDef?client_id=1zsaj4fau3e3",
    "tos_uri": "https://org.com",
    "redirect_uris": [
      "https://org.com/admin/redirect"
    ],
    "client_id_issued_at": 1521162561,
    "client_secret": "uhagre2"
  },
  "definitionId": 1
},
]
 </doc><param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="dynamicClientJsonResponse" mediatype="application/json">
<doc>Note: Response body is an array.</doc><param style="plain" name="owner" type="String" optional="Yes" >
<doc>The owner of the client if present. May be null.</doc>
</param>
<param style="plain" name="definitionId" type="Integer" optional="No" >
<doc>The definition ID which this dynamic client belongs to.</doc>
</param>
<param style="plain" name="clientId" type="String" optional="No" >
<doc>The clientId issued to this dynamic client. Guaranteed to be unique.</doc>
</param>
<param style="plain" name="data" type="dynamicClientData" optional="No" >
<doc>The extended data of the client. May contain additional parameters presented at runtime as defined by the registration specification (http://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata). </doc>
</param>
</representation><representation name="dynamicClientData" mediatype="application/json">
<param style="plain" name="redirect_uri" type="String" optional="No"  repeating="true">
<doc>The redirect_uri of the client. The only field guaranteed to be present in this JSON.</doc>
</param>
<param style="plain" name="client_secret" type="String" optional="Yes" >
<doc>The client secret issued to this client. May not be present. </doc>
</param>
</representation></response><response status="400">
<doc>Bad Request. There is a problem with the request. The JSON result describes the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="404">
<doc>Not Found. The requested service does not exist. The JSON message indicates which resource.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="500">
<doc>An internal error occurred. The JSON message indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting. </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="result" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response></method>
</resource>
</resources>
</application>
