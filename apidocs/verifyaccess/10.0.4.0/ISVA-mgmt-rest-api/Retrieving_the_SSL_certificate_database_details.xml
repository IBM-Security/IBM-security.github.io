<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Retrieving the SSL certificate database details</doc>
<resources base="">
<resource path="https://{appliance_hostname}/isam/ssl_certificates/{cert_dbase_id}/details">
<param type="path" name="appliance_hostname">
<doc>Host name of the appliance.</doc>
</param>
<param type="path" name="cert_dbase_id">
<doc>Name of the certificate database to delete.</doc>
</param>
<method name="GET" id="Retrieve Security Verify Access SSL certificate database details"><doc>     To retrieve the SSL certificate database details with the RESTful web service, issue an HTTP GET command on the SSL Certificates resource URI. </doc>
<request>
<doc>
 GET https://{appliance_hostname}/isam/ssl_certificates/{id}/details
 </doc><param name="Authorization" style="header">
<doc>Basic Authentication header </doc></param>
<param name="Accept:application/json" style="header">
<doc>Required for requests to the service </doc></param>
</request>
<response status="400">
<doc>There is a problem with the request. The JSON message describes the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="message" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="404">
<doc>File not Found, The requested service does not exist. The JSON message indicates which resource.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="message" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="500">
<doc>An internal error occurred. The JSON message indicates the problem.</doc>
<param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
<representation name="httpErrorJsonResponse" mediatype="application/json">
<param style="plain" name="message" type="String" optional="No" >
<doc>The error message. </doc>
</param>
</representation></response><response status="200">
<doc>OK, The request was successful.</doc>
<doc>
 Local certificate database
 GET https://{appliance_hostname}/isam/ssl_certificates/pdsrv/details

 200 OK
 {
 "type": "kdb"
 }

 Network certificate database: nCipher with RFS enabled
 GET https://{appliance_hostname}/isam/ssl_certificates/mythalesdb/details

 200 OK
 {
 "type": "p11",
 "pkcs11.library": "libcknfast.so",
 "pkcs11.tokenlabel": "label",
 "hsm.type": "ncipher",
 "hsm.ip":"10.150.25.207",
 "hsm.port":"80",
 "hsm.secondary-ip":"10.150.25.209",
 "hsm.secondary-port":"80",
 "hsm.kneti-hash": "2418ec85c86027eb2d5959fef35edc5e1b3b698f",
 "hsm.esn": "3138-147F-2D64",
 "hsm.use-rfs":true,
 "hsm.rfs": "10.150.25.208",
 "hsm.rfs-port":"81"
 }

 Network certificate database: nCipher with RFS disabled
 GET https://{appliance_hostname}/isam/ssl_certificates/mythalesdb/details

 200 OK
 {
 "type": "p11",
 "pkcs11.library": "libcknfast.so",
 "pkcs11.tokenlabel": "label",
 "hsm.ip":"10.150.25.207",
 "hsm.port":"9004",
 "hsm.use-rfs":false,
 "hsm.update-zip": "local.zip"
 }

 Network certificate database: SafeNet
 GET https://{appliance_hostname}/isam/ssl_certificates/mysafenetdb/details

 200 OK
 {
 "type": "p11",
 "pkcs11.library": "libCryptoki2_64.so",
 "pkcs11.tokenlabel": "label",
 "hsm.type": "safenet",
 "hsm.ip":"10.150.25.207",
 "hsm.client-ip": "10.150.25.206"
 }
 </doc><param name="Content-Type:application/json" style="header">
<doc>Response is in JSON formatting </doc></param>
<representation name="SslDbDetailsJsonResponse" mediatype="application/json">
<param style="plain" name="type" type="String" optional="No" >
<doc>The type of the database. Valid values are 'kdb' (local database) and 'p11' (network).</doc>
</param>
<param style="plain" name="hsm.type" type="String" optional="No" >
<doc>The HSM type of the database. Only returned if type is 'p11'.</doc>
</param>
<param style="plain" name="pkcs11.library" type="String" optional="No" >
<doc>The HSM library for the database. Only returned if type is 'p11'.</doc>
</param>
<param style="plain" name="pkcs11.tokenlabel" type="String" optional="No" >
<doc>The tokenl label of the HSM device. Only returned if type is 'p11'.</doc>
</param>
<param style="plain" name="hsm.ip" type="String" optional="No" >
<doc>The IP address of the HSM device. Only returned if type is 'p11'.</doc>
</param>
<param style="plain" name="hsm.port" type="String" optional="No" >
<doc>The port of the module. Only returned if the HSM type is 'ncipher'.</doc>
</param>
<param style="plain" name="hsm.kneti-hash" type="String" optional="No" >
<doc>The hash of the KNETI key. Only returned if the HSM type is 'ncipher'.</doc>
</param>
<param style="plain" name="hsm.esn" type="String" optional="No" >
<doc>The Electronic Serial Number (ESN) of the module. Only returned if the HSM type is 'ncipher'.</doc>
</param>
<param style="plain" name="hsm.secondary-ip" type="String" optional="No" >
<doc>The IP address of the secondary module. Only returned if the HSM type is 'ncipher'.</doc>
</param>
<param style="plain" name="hsm.secondary-port" type="Integer" optional="No" >
<doc>The port of the secondary module. Only returned if the HSM type is 'ncipher'.</doc>
</param>
<param style="plain" name="hsm.secondary-kneti-hash" type="String" optional="No" >
<doc>The hash of the secondary's KNETI key. Only returned if the HSM type is 'ncipher'.</doc>
</param>
<param style="plain" name="hsm.secondary-esn" type="String" optional="No" >
<doc>The Electronic Serial Number (ESN) of the secondary module. Only returned if the HSM type is 'ncipher'.</doc>
</param>
<param style="plain" name="hsm.use-rfs" type="Boolean" optional="No" >
<doc>The HSM type of the database. Only returned if the HSM type is 'ncipher'.</doc>
</param>
<param style="plain" name="hsm.rfs" type="String" optional="No" >
<doc>The HSM type of the database. Only returned if the HSM type is 'ncipher'.</doc>
</param>
<param style="plain" name="hsm.rfs-port" type="Integer" optional="No" >
<doc>The HSM type of the database. Only returned if the HSM type is 'ncipher'.</doc>
</param>
<param style="plain" name="hsm.rfs-auth" type="Boolean" optional="No" >
<doc>Specifies whether KNETI authentication is used when connecting to the RFS. Only returned if the HSM type is 'ncipher'.</doc>
</param>
<param style="plain" name="hsm.update-zip" type="String" optional="No" >
<doc>The name of the zip file containing local data that was uploaded from the device. Only returned if the HSM type is 'ncipher'.</doc>
</param>
<param style="plain" name="hsm.client-ip" type="String" optional="No" >
<doc>The hostname that was used to create the certificate transfered to the Luna SA device. Only returned if the HSM type is 'safenet'. </doc>
</param>
</representation></response></method>
</resource>
</resources>
</application>
