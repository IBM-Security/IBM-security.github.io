<?xml version = "1.0" encoding ="UTf-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Account Search</doc>
<resources base="">
<resource path="http(s)://hostname:port/itim/rest/accounts">

<param type="query" name="attributes [Query Parameter]">
<doc>Optional&#58; Specifies the comma-separated attributes that are returned for each account. The specified attributes are returned in the "_attributes" property of each account. Specifying a value of "*" returns all attributes.  Example - ?attributes=owner,eraccountstatus,eruid,eraccountownershiptype</doc>
</param>
<param type="query" name="embedded [Query Parameter]">
<doc>Optional&#58; Specifies the comma-separated attributes to return for reference attributes of accounts (eg. erservice). The specified attributes are returned in the "_embedded" section of the response. Specifying a value of '*' after reference attribute returns all the properties of the reference attribute. Example - ?embedded=erservice.erservicename.</doc>
</param>
<param type="query" name="limit [Query Parameter]">
<doc>Optional&#58; Specifies the maximum number of items that the search returns. Example - ?limit=1000</doc>
</param>
<param type="query" name="sort [Query Parameter]">
<doc>Optional&#58; Specifies the attribute and order ("+" for ascending, "-" for descending) for sorting the returned account. Note&#58; The client is responsible for performing URL encoding if necessary.  Example - ?sort=%2Deruid  (%2D is UTF-8 encoding for - sign)</doc>
</param>
<method name="GET" id="Account Search"><doc>   Returns information about accounts that match the specified search criteria if there are any. </doc>
<doc>	By default, no attributes are returned. The client must specify the "attributes" query parameter to request the attributes to be returned in the "_attributes" property of each account. </doc>
<doc>	If wild-card is used, the list of returned attributes is different for different account profiles. </doc>
<doc>	If a particular type is searched, the client knows the exact value to pass so that a profile can be searched(Ex.PosixLinuxAccount, ITIMAccount etc.).  </doc>
<request>
<doc>

 GET http(s)://hostname:port/itim/rest/accounts?attributes=eruid,erposixsecondgroup 
	    
 </doc><param name="Cache-Control" style="header">
<doc>Optional&#58; Specifies caching options. By default, search results are cached for each client so that subsequent requests by the client that specify the same search criteria are satisfied via the cache. The 'no-cache' option performs the search without referencing any cache. The 'delete-cache' option deletes the cache. In this case, empty search results are returned. Example - Cache-Control = no-cache </doc></param>
<param name="Range" style="header">
<doc>Optional&#58; Specifies the range of items to return. Note&#58; The range uses a zero-based index. Example - items=0-99 </doc></param>
</request>
<response status="200">
<doc>OK. The request was successful.</doc>
<doc>

[
 {
   "_links": {
     "self": {
       "href": "/itim/rest/accounts/ZXJ1aWQ9Y3JpZWdsZSxvdT1zeXN0ZW1Vc2VyLG91PWl0aW0
       	sb3U9b3JnLGRjPWNvbQ",
       "title": "criegle"
     }
   },
   "_attributes": {
     "eruid": "criegle"
   }
 },
 {
   "_links": {
     "self": {
       "href": "/itim/rest/accounts/ZXJ1aWQ9YWF1c3RpbixvdT1zeXN0ZW1Vc2VyLG91PWl0aW0s
       	b3U9b3JnLGRjPWNvbQ",
       "title": "aaustin"
     }
   },
   "_attributes": {
     "eruid": "aaustin"
   }
 }
]

</doc></response></method>
</resource>
</resources>
</application>
