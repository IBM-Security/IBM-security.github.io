<?xml version = "1.0" encoding ="UTf-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Password Policy Modify</doc>
<resources base="">
<resource path="http(s)://hostname:port/itim/rest/passwordypolicy/{passwordPolicyId}">

<param type="path" name="passwordPolicyId [Path Parameter]">
<doc>Unique identifier for the password policy to be modified.</doc>
</param>
<method name="PUT" id="Password Policy Modify"><doc>		Modifies a Password Policy with the given attributes. Please note, at least one of rules, policyTargets or _attributes will need to be specified. </doc>
<doc>		rules : JSON representation of the Password Policy rules to be set. Below are the attributes than can be used. This is an optional parameter. </doc>
<doc>		Note : In order to disable an existing rule, the rule name will need to be specified with it's default value e.g "minLength" : "-1"  </doc>
<doc>		minLength(Minimum length) : Minimum length of the password to be generated. Numeric values allowed. By default, -1 is set indicating that the rule is disabled. </doc>
<doc>		maxLength(Maximum length) : Maximum length of the password to be generated. Numeric values allowed. By default, -1 is set indicating that the rule is disabled. </doc>
<doc>		maxSequentialCharacters(Maximum Repeated Characters) : Maximum allowed number of sequential characters within the password. Numeric values allowed. By default, -1 is set indicating that the rule is disabled. </doc>
<doc>		repeatedHistoryLength(Repeated history length) : Length of the password history used to check for repeating passwords. Numeric values allowed. By default, -1 is set indicating that the rule is disabled. </doc>
<doc>		reversedHistoryLength(Reversed history length) : length of the password history used to check for repeating passwords spelled backwards. Numeric values allowed. By default, -1 is set indicating that the rule is disabled. </doc>
<doc>		allowUserID(Allow user ID) : Allow or disallow userID in password. It is case sensitive. Allowed values are true and false. By default, true is set. </doc>
<doc>		allowUserIDCaseInsensitive(Allow user ID with case insensitivity) : Allow or disallow userID in password regardless of upper and lower cases. Allowed values are true and false. By default, true is set. </doc>
<doc>		allowUserName(Allow user name) : Allow or disallow user name in password. It is case sensitive. Allowed values are true and false. By default, true is set. </doc>
<doc>		allowUserNameCaseInsensitive(Allow user name with case insensitivity) : Allow or disallow user name in password regardless of upper and lower cases. Allowed values are true and false. By default, true is set. </doc>
<doc>		allowInDictionary(Allow in dictionary) : Allow or disallow the use of passwords defined in password dictionary. Allowed values are true and false. By default, true is set. </doc>
<doc>		invalidChars(Characters not allowed) : Characters which are not to be used within the password. </doc>
<doc>		requiredChars(Required characters) : Characters one of which which must used within the password. </doc>
<doc>		restrictedToChars(Restricted to characters) : Characters from which the password must be created. </doc>
<doc>		startsWithChars(Starts with characters) : Characters one of which must be the first character set of the generated password. </doc>
<doc>		minDistinctCharacters(Minimum unique characters) : Minimum required number of distinct characters within the password. Numeric values allowed. By default, -1 is set indicating that the rule is disabled. </doc>
<doc>		minAlphabeticCharacters(Minimum alphabetic characters) : Minimum required number of alphabetic characters within the password. Numeric values allowed. By default, -1 is set indicating that the rule is disabled. </doc>
<doc>		minDigitCharacters(Minimum numeric characters) : Minimum required number of numeric characters within the password. Numeric values allowed. By default, -1 is set indicating that the rule is disabled. </doc>
<doc>		passwordComplexity(Password complexity rule) : Enabled password complexity rule. Allowed value are true and false. By default, false is set. </doc>
<doc>		customRules : JSON representation of custom password rules to be enforced for the policy. The key contains the full qualified name of the rule class as specified in passwordrules.properties. 	  										For example, if passwordrule.properties contains a rule name password.rule.examples.passwordrules.RegularExpressionRule, then the key here will be examples.passwordrules.RegularExpressionRule. 	  										The value parameter can contain boolean value or any other value as per the property value of the rule in passwordrules.properties. For example, if the value is set to false in the passwordrules.properties, 	  										then the user can specify true or false. "customRules": { "examples.passwordrules.RegularExpressionRule": "true" }  </doc>
<doc>		policyTargets : JSON representation of array of policy targets to be set for the password policy. This is an optional parameter. Assigning new values will remove all existing policy targets. In order to retain previous targets, those targets need to be specified. 	  										Allowed values for constant are ALL_SERVICE(the policy will be applicable for all services in the system. In this case if any value is specified, it is ignored), 	  										SPECIFIC_SERVICE(the policy will be applicable for a specific service which is specified by the service URI) and SERVICE_TYPE(the policy will be applicable for a specific service type which is specified by the service profile name e.g WinLocalProfile). 	  										Please note, for SERVICE_TYPE, only service profiles other than ITIM service, hosted service and HR feed are allowed. Services specified by SPECIFIC_SERVICE must belong to the same org container for which the policy is being created. </doc>
<doc>		_attributes : JSON representation of the Password Policy attributes to be set. This is an optional parameter. Below are the attributes than can be used. </doc>
<doc>		erpolicyitemname : Name of the password policy. If this parameter is specified, then a value must be entered. </doc>
<doc>		erscope : Scope of the password policy. Allowed value are 2(this business unit and sub units) and 1(this business unit only). If this parameter is specified, then a value must be entered. </doc>
<doc>		erenabled : Specifies whether the password policy will be enabled or disabled as soon as the policy is created. Allowed values are true and false. If this parameter is specified, then a value must be entered. </doc>
<doc>		description : Description of the password policy. It is an optional parameter. </doc>
<doc> 	erlabel : Specifies a caption for the password policy. It is an optional parameter. </doc>
<doc>		erkeywords : Specifies keywords for the password policy. It is an optional parameter. </doc>
<request>
<doc>
 
 PUT http(s)://hostname:port/itim/rest/passwordpolicy/ZXJnbG9iYWxpZD02MzcwNzE1MjM3NzI2NzY2NjcxLG91PXBvbGljaWVzLGVyZ2xvYmFsaWQ9MDAwMDAwMDAwMDAwMDAwMDAwMDAsb3U9b3JnLGRjPWNvbQ
 
	{
		  	"rules": {
		      "minLength" : "1",
		      "maxLength" : "10"
		    },
			"policyTargets": [{
					"constant" : "SPECIFIC_SERVICE",
					"service" : "ZXJnbG9iYWxpZD05MzM3OTgyNzQyNzQxMDUwMzQsb3U9c2VydmljZXMsZXJnbG9iYWxpZD0wMDAwMDAwMDAwMDAwMDAwMDAwMCxvdT1vcmcsZGM9Y29t"
				}
			],
			"_attributes": {
				"erenabled": "false",
				"erscope": "2"   	
			}
	}
	</doc></request>
<response status="202">
<doc>OK. The request was successful.</doc>
</response></method>
</resource>
</resources>
</application>
