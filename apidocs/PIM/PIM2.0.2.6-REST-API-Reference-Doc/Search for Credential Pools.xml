<?xml version = "1.0" encoding ="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="RAPI.xsl"?>
<application><doc>Search for Credential Pools</doc>
<resources base="">
<resource path="https://{appliance_hostname}/ispim/rest/credentialPools">
<param type="path" name="appliance_hostname">
<doc>Host name of the appliance.</doc>
</param>
<param type="query" name="attributes">
<doc>(Optional) Comma separated list of attributes to be returned for each credential pool. By default, all attributes are included. Specifying "*" will include all attributes. Example&#58; ?attributes=erCredentialName,description</doc>
</param>
<param type="query" name="embedded">
<doc>(Optional) Comma separated list of embedded entity attributes to be returned. The supported entities are resource and credentials. Specifying an entity without any attributes will retrieve all attributes for that entity. By default, no embedded entity is included. For example&#58; ?embedded=resource,credentials.erCredentialName will retrieve all attributes of each credential pool's resource and the name of each credential pool's member credentials.</doc>
</param>
<param type="query" name="filter">
<doc>(Optional) Search criteria in LDAP filter format. By default, all credential pools are returned. Attributes that can be used for filtering are erCredentialName, description, and resourceName. Example&#58; ?filter=(&amp;(erCredentialName=admin*)(resourceName=server*))</doc>
</param>
<param type="query" name="limit">
<doc>(Optional) Maximum number of credential pools to be returned. By default, all matching credential pools are returned. Example&#58; ?limit=15</doc>
</param>
<param type="query" name="sort">
<doc>(Optional) Sorting order and attribute. Attributes that can be used for sorting ar erCredentialName, description, and resourceName. For example&#58; ?sort=+erCredentialName sorts the credential pools by name in ascending order.</doc>
</param>
<method name="GET" id="getCredentialPools"><doc> Retrieves the requested attributes of credential pools that match a given search criteria. A credential pool is a collection of shared credentials of equal privilege, which are grouped together by one or more common tags. This API can be used to retrieve resource information about each credential pools and to list the credentials that are grouped in each credential pools. </doc>
<request>
<doc> GET http://pim.jke.org/ispim/rest/credentialPools/?attributes=*&amp;embedded=resource.name,credentials.erCredentialName&amp;filter=&#40;resourceName=dbsvr1&#41;
 </doc><doc> This request will retrieve all attributes of the credential pools belonging to the resource named "dbsvr1". The name of each pool's resource and the name of credentials that are grouped in each pool will also be returned.
</doc><param name="Range" style="header">
<doc>Range of items in the search result to be returned. The item index starts from 0. Example&#58; items=3-7 returns items at the 4th to 8th position. </doc></param>
<param name="Authorization" style="header">
<doc>Basic authentication header. </doc></param>
<param name="Accept" style="header">
<doc>application/json </doc></param>
</request>
<response status="200">
<doc>Success. The response body contains the matching credential pools.</doc>
<doc>
    [
      {
        "_links":{
          "self":{
            "href":"/ispim/rest/credentialPools/&lt;ID&gt;",
            "title":"DB Maintenance Accounts"
          }
        },
        "_embedded": {
          "resource": {
            "_links": {
              "self": {
                "href": "/ispim/rest/resources/&lt;ID&gt;",
                "title": "dbsvr1"
              }
            },
            "_attributes": {
              "name":["dbsvr1"]
            }
          },
          "credentials":[
            {
              "_links": {
                "self": {
                  "href": "/ispim/rest/credentials/&lt;ID&gt;",
                  "title": "dbuser1"
                }
              },
              "_attributes": {
                "erCredentialName":["dbuser1"]
              }
            },
            {
              "_links": {
                "self": {
                  "href": "/ispim/rest/credentials/&lt;ID&gt;",
                  "title": "dbuser2"
                }
              },
              "_attributes": {
                "erCredentialName":["dbuser2"]
              }
            }
          ]
        },
        "_attributes":{
          "erCredentialName":["DB Maintenance Accounts"],
          "description":["Shared accounts for performing database maintenance tasks in dbsvr1"],
          "erpCredentialPoolRule":["maintenance"]
        }
      }
  ]
</doc><representation name="GetCredentialPoolsResponse" mediatype="application/json">
<doc>Note: Response body is an array.</doc><param style="plain" name="_attributes" type="GetCredentialPoolsResponseAttributes" optional="No" >
<doc>Attributes of the credential pool. </doc>
</param>
<param style="plain" name="_links" type="GetCredentialPoolsResponseLinks" optional="No" >
<doc>URIs to the reference attributes of the credential pool. </doc>
</param>
<param style="plain" name="_embedded" type="GetCredentialPoolsResponseEmbedded" optional="No" >
<doc>Embedded entities. </doc>
</param>
</representation><representation name="GetCredentialPoolsResponseAttributes" mediatype="application/json">
<param style="plain" name="erCredentialName" type="String" optional="No"  repeating="true">
<doc>Credential pool name. </doc>
</param>
<param style="plain" name="description" type="String" optional="No"  repeating="true">
<doc>Credential pool description. </doc>
</param>
<param style="plain" name="erpCredentialPoolRule" type="String" optional="No"  repeating="true">
<doc>Credential tags that are included in the credential pool. </doc>
</param>
</representation><representation name="GetCredentialPoolsResponseLinks" mediatype="application/json">
<param style="plain" name="self" type="hrefJSON" optional="No" >
<doc>URI to the credential pool itself. </doc>
</param>
</representation><representation name="GetCredentialPoolsResponseEmbedded" mediatype="application/json">
<param style="plain" name="resource" type="String" optional="No" >
<doc>JSON object of the resource that the credential pool belongs to. The structure of the resource object can be found in the documentation about searching for resources. </doc>
</param>
<param style="plain" name="credentials" type="String" optional="No"  repeating="true">
<doc>JSON object of the credentials that are members of the credential pool. The structure of the credential object can be found in the documentation about searching for credentials. </doc>
</param>
</representation><representation name="hrefJSON" mediatype="application/json">
<param style="plain" name="href" type="String" optional="No" >
<doc>The URI to a resource object. </doc>
</param>
<param style="plain" name="title" type="String" optional="Yes" >
<doc>The name of the resource object. </doc>
</param>
</representation></response><response status="206">
<doc>Partial results. The request specified a Range header parameter and at least one of the items in the specified range is returned.</doc>
<param name="Content-Range" style="header">
<doc>Range of returned items and the total number of items available. The item index starts from 0. Example&#58; items 3-7/11 means the response body contains search results from the 4th position to 8th position, and there are 11 matching credential pools in total. </doc></param>
</response><response status="302">
<doc>Found. The Authorization header is missing and the request is redirected to form-based login.</doc>
</response><response status="400">
<doc>Bad request. The requested attribute list, search filter, or sort option is invalid. The response body contains information about the error in the request.</doc>
<representation name="GetCredentialPoolsErrorResponse" mediatype="application/json">
<param style="plain" name="id" type="String" optional="No" >
<doc>TMS message identifier. </doc>
</param>
<param style="plain" name="severity" type="String" optional="No" >
<doc>Severity of the problem. "E" indicates an error, "W" indicates a warning. </doc>
</param>
<param style="plain" name="inserts" type="String" optional="No"  repeating="true">
<doc>Request-specific information that are inserted into the error message. </doc>
</param>
<param style="plain" name="key" type="String" optional="No" >
<doc>Message identifier. </doc>
</param>
<param style="plain" name="text" type="String" optional="No" >
<doc>Error message. </doc>
</param>
</representation></response><response status="401">
<doc>Unauthorized. The basic authentication information is incorrect.</doc>
</response><response status="416">
<doc>Range not satisfiable. The request specified a Range header parameter and no items in the specified range are returned.</doc>
<param name="Content-Range" style="header">
<doc>Range of returned items and the total number of items available. The item index starts from 0. Example&#58; items 3-7/11 means the response body contains search results from the 4th position to 8th position, and there are 11 matching credential pools in total. </doc></param>
</response><response status="500">
<doc>Internal server error. The server encountered an error while attempting to process the request. The response body may contain further information about the error.</doc>
</response></method>
</resource>
</resources>
</application>
